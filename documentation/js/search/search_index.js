var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.132,1,0.539]],["body/components/AppComponent.html",[0,0.221,1,0.981,2,1.056,3,0.69,4,0.495,5,0.863,6,0.863,7,0.863,8,0.863,9,0.421,10,2.03,11,1.056,12,3.53,13,2.832,14,2.832,15,1.15,16,3.512,17,3.512,18,1.285,19,1.285,20,1.252,21,2.385,22,2.222,23,0.863,24,1.76,25,1.543,26,1.204,27,4.045,28,1.204,29,3.512,30,0.495,31,1.056,32,1.37,33,2.396,34,2.361,35,4.377,36,4.377,37,3.53,38,0.661,39,2.03,40,3.389,41,1.252,42,3.512,43,2.05,44,3.512,45,2.046,46,2.832,47,3.512,48,0.661,49,0.052,50,1.062,51,0.795,52,0.661,53,4.603,54,4.045,55,2.518,56,3.237,57,1.062,58,1.433,59,2.518,60,2.05,61,2.518,62,3.512,63,2.832,64,3.512,65,2.518,66,0.982,67,1.119,68,1.119,69,3.512,70,3.512,71,0.905,72,0.421,73,0.69,74,1.47,75,2.385,76,1.119,77,0.588,78,1.278,79,0.69,80,1.056,81,1.709,82,2.518,83,0.574,84,0.574,85,0.757,86,2.03,87,2.03,88,2.518,89,2.972,90,2.832,91,2.03,92,2.518,93,2.518,94,0.661,95,1.204,96,1.204,97,0.863,98,1.5,99,0.863,100,0.863,101,0.495,102,0.863,103,1.204,104,0.863,105,0.495,106,0.863,107,0.421,108,0.863,109,0.495,110,0.863,111,0.863,112,0.863,113,0.863,114,0.032,115,0.032]],["title/modules/AppModule.html",[116,1.392,117,1.6]],["body/modules/AppModule.html",[1,1.065,3,0.695,4,0.695,9,0.592,49,0.051,71,0.94,72,0.592,73,0.983,77,0.838,79,0.983,94,0.929,101,0.983,105,0.983,107,0.838,109,0.983,114,0.04,115,0.04,116,1.795,117,3.293,118,1.795,119,1.571,120,3.544,121,3.544,122,2.851,123,2.4,124,2.851,125,2.851,126,2.851,127,2.851,128,2.54,129,3.544,130,2.851,131,2.4,132,3.535,133,2.851,134,2.851,135,3.535,136,2.851,137,2.4,138,3.535,139,2.851]],["title/modules/AppRoutingModule.html",[116,1.392,128,1.392]],["body/modules/AppRoutingModule.html",[0,0.212,3,0.701,4,0.701,9,0.597,13,3.564,18,1.261,20,1.261,25,1.328,49,0.052,71,0.987,72,0.597,75,2.422,77,0.74,78,1.811,83,0.814,84,0.814,107,0.74,114,0.04,115,0.04,116,2.244,118,1.811,123,3,128,2.244,133,3.872,134,3.564,140,3.567,141,3.567,142,5.158,143,3.068,144,1.811,145,2.422,146,3.567,147,4.419,148,3.567,149,2.082,150,4.419,151,3,152,4.419,153,4.419,154,2.877,155,3.567,156,3.567,157,2.422,158,3.567,159,2.877,160,2.877,161,2.422,162,3.567]],["title/injectables/FetchApiDataService.html",[163,1.392,164,1.069]],["body/injectables/FetchApiDataService.html",[3,0.514,4,0.245,9,0.208,11,1.383,12,1.003,15,0.538,18,1.254,19,0.538,20,0.686,22,1.829,30,0.245,32,2.071,34,2.224,38,0.327,41,1.254,45,0.911,48,1.189,49,0.052,50,1.298,51,0.89,52,1.189,57,1.364,66,1.994,71,0.658,72,0.208,80,1.45,83,0.284,84,0.284,85,1.402,114,0.019,115,0.019,139,1.003,149,2.841,163,1.04,164,1.182,165,0.845,166,3.275,167,2.018,168,0.845,169,2.049,170,1.391,171,1.406,172,1.653,173,3.029,174,2.104,175,2.049,176,3.029,177,2.443,178,2.049,179,2.049,180,2.049,181,2.049,182,3.029,183,2.049,184,1.653,185,1.653,186,2.049,187,2.049,188,2.049,189,1.244,190,3.604,191,1.244,192,2.049,193,2.049,194,2.613,195,1.653,196,2.107,197,2.443,198,2.049,199,2.884,200,1.244,201,1.653,202,2.447,203,2.057,204,2.542,205,2.703,206,4.408,207,1.244,208,2.049,209,2.049,210,1.244,211,2.049,212,2.057,213,2.613,214,2.049,215,2.049,216,2.057,217,1.244,218,3.71,219,1.244,220,1.391,221,1.391,222,2.049,223,1.244,224,2.049,225,1.244,226,1.653,227,2.613,228,2.049,229,2.049,230,1.244,231,2.443,232,2.613,233,2.049,234,1.244,235,2.049,236,1.244,237,2.049,238,1.244,239,1.653,240,1.244,241,1.653,242,2.049,243,2.049,244,1.609,245,1.653,246,2.049,247,2.049,248,1.244,249,1.391,250,2.049,251,1.244,252,2.049,253,3.981,254,2.107,255,3.019,256,2.049,257,1.244,258,1.653,259,3.029,260,2.049,261,1.244,262,2.049,263,1.244,264,2.049,265,4.354,266,1.244,267,1.244,268,0.726,269,1.244,270,0.845,271,0.845,272,1.003,273,1.244,274,0.845,275,2.757,276,2.049,277,3.604,278,2.049,279,3.419,280,3.586,281,3.81,282,4.601,283,4.447,284,4.447,285,3.81,286,4.125,287,1.244,288,2.049,289,2.049,290,1.244,291,1.244,292,1.244,293,1.244,294,1.244,295,2.057,296,1.003,297,1.244,298,1.244,299,1.244,300,1.244,301,1.003,302,1.244,303,1.244,304,1.653,305,2.613,306,1.244,307,1.244,308,1.244,309,1.244,310,1.244,311,1.244,312,1.244,313,1.244,314,1.244,315,1.244]],["title/injectables/GlobalErrorHandler.html",[163,1.392,316,1.861]],["body/injectables/GlobalErrorHandler.html",[3,0.744,4,0.744,9,0.634,15,1.204,30,0.744,38,0.994,41,1.204,48,1.204,49,0.051,50,1.204,51,0.901,52,1.204,57,0.994,58,1.377,71,0.744,72,0.634,83,0.864,84,0.864,114,0.042,115,0.042,163,2.326,165,2.57,184,3.695,239,3.695,244,2.105,274,2.57,316,3.111,317,3.975,318,3.052,319,3.785,320,5.331,321,3.785,322,3.785,323,4.582,324,1.682,325,3.785,326,3.785,327,3.785,328,3.785,329,3.785]],["title/components/InfoDialogComponent.html",[0,0.132,101,0.539]],["body/components/InfoDialogComponent.html",[0,0.237,1,0.552,2,1.138,3,1.02,4,0.552,5,0.963,6,0.963,7,0.963,8,0.963,9,0.47,11,0.845,15,0.995,18,0.995,19,0.738,20,0.738,23,0.963,24,1.798,25,1.577,26,1.298,28,1.298,30,0.552,31,1.138,32,1.671,33,2.352,34,2.99,38,0.738,41,1.257,43,2.21,48,0.738,49,0.052,50,1.125,51,0.901,52,0.738,57,0.738,58,1.138,66,1.788,71,0.744,72,0.47,73,0.552,76,1.249,77,0.47,79,0.552,80,0.845,83,0.641,84,0.641,85,0.845,94,0.738,95,1.298,96,1.298,97,0.963,98,1.571,99,0.963,100,0.963,101,0.901,102,0.963,103,1.298,104,0.963,105,0.552,106,0.963,107,0.47,108,0.963,109,0.552,110,0.963,111,0.963,112,0.963,113,0.963,114,0.035,115,0.035,171,1.999,330,3.976,331,3.347,332,2.266,333,4.283,334,3.787,335,3.478,336,4.584,337,2.81,338,3.787,339,4.283,340,4.283,341,2.81,342,2.21,343,3.249,344,2.81,345,2.81,346,2.81,347,2.81,348,2.81,349,2.81,350,1.908,351,2.81,352,2.81,353,2.81,354,2.81,355,2.81,356,2.81]],["title/components/LoginFormComponent.html",[0,0.132,77,0.459]],["body/components/LoginFormComponent.html",[0,0.223,1,0.458,2,1,3,0.654,4,0.458,5,0.799,6,0.799,7,0.799,8,0.799,9,0.39,11,0.701,14,1.88,15,0.874,18,1.111,19,0.612,20,1.419,21,2.634,23,0.799,24,1.732,25,1.519,26,1.14,28,1.14,30,0.458,31,1,32,2.015,33,1.724,38,0.874,41,1.257,43,1.942,45,1.988,48,0.612,49,0.052,50,1.019,51,0.879,52,0.612,57,0.874,58,1.271,67,1.036,68,1.036,71,0.879,72,0.39,73,0.458,76,1.036,77,0.708,78,2.485,79,0.458,80,0.701,83,0.532,84,0.532,85,1.271,94,0.612,95,1.14,96,1.14,97,0.799,98,1.45,99,0.799,100,0.799,101,0.458,102,0.799,103,1.14,104,0.799,105,0.458,106,0.799,107,0.39,108,0.799,109,0.458,110,0.799,111,0.799,112,0.799,113,0.799,114,0.03,115,0.03,144,1.184,157,2.259,164,1.745,167,1.65,171,1.513,174,1.361,204,1.689,212,2.259,216,1.583,244,1.298,245,1.88,279,2.259,324,1.478,342,1.942,350,1.583,357,3.947,358,1.583,359,1.969,360,3.037,361,3.128,362,2.683,363,3.75,364,2.611,365,3.879,366,2.907,367,4.23,368,2.147,369,1.583,370,3.607,371,2.611,372,3.431,373,3.327,374,2.469,375,3.128,376,3.879,377,2.331,378,1.88,379,2.331,380,2.331,381,2.259,382,2.331,383,1.361,384,1.361,385,1.184,386,2.331,387,1.361,388,2.683,389,1.88,390,2.331,391,2.331,392,1.942,393,3.327,394,2.331,395,1.88,396,2.331,397,2.331,398,1.88,399,1.942,400,1.942,401,1.942,402,2.331,403,2.331]],["title/components/MovieCardComponent.html",[0,0.132,79,0.539]],["body/components/MovieCardComponent.html",[0,0.159,1,0.207,2,0.535,3,0.455,4,0.35,5,0.36,6,0.36,7,0.36,8,0.36,9,0.176,11,1.487,15,0.468,18,0.608,19,0.276,20,0.468,21,0.714,22,2.089,23,0.36,24,1.37,25,1.202,26,0.61,28,0.61,30,0.35,31,0.535,32,0.904,33,1.777,34,2.059,38,0.468,40,2.07,41,1.232,48,1.015,49,0.052,50,1.319,51,0.902,52,1.015,56,1.209,57,1.131,58,1.448,60,1.78,63,1.436,66,1.96,67,1.471,68,1.355,71,0.693,72,0.176,73,0.207,76,0.467,77,0.176,79,0.599,80,1.56,81,3.215,83,0.24,84,0.24,85,1.202,89,2.395,94,0.276,95,0.61,96,0.61,97,0.36,98,0.934,99,0.36,100,0.36,101,0.35,102,0.36,103,0.61,104,0.36,105,0.207,106,0.36,107,0.176,108,0.36,109,0.207,110,0.36,111,0.61,112,0.36,113,0.36,114,0.016,115,0.016,131,0.714,144,0.534,149,1.352,164,1.063,167,0.695,170,1.209,171,0.695,172,1.868,174,1.352,185,1.868,199,2.624,201,0.848,202,1.209,203,2.395,204,1.384,205,2.715,206,0.848,216,2.07,220,2.863,221,1.85,226,1.436,231,2.198,241,0.848,244,1.292,249,0.714,258,0.848,268,0.614,270,1.572,275,1.352,295,1.209,296,1.436,301,0.848,324,0.791,331,0.714,335,2.519,342,1.352,343,1.209,359,1.176,364,1.039,366,1.352,368,1.548,369,0.714,371,1.591,372,2.395,374,1.352,383,0.614,384,0.614,385,0.534,387,1.039,399,1.78,400,1.78,401,1.78,404,3.819,405,0.848,406,3.049,407,2.316,408,1.781,409,2.726,410,2.726,411,3.049,412,2.726,413,3.049,414,3.049,415,2.316,416,1.868,417,2.459,418,2.316,419,2.316,420,2.316,421,2.316,422,1.781,423,1.781,424,1.052,425,1.436,426,1.052,427,1.052,428,1.781,429,3.049,430,2.925,431,1.052,432,1.781,433,3.311,434,2.726,435,3.311,436,2.316,437,1.436,438,1.052,439,1.209,440,2.07,441,1.209,442,2.248,443,1.052,444,1.052,445,1.781,446,1.052,447,2.316,448,3.998,449,2.726,450,1.781,451,1.052,452,1.781,453,1.781,454,1.052,455,1.436,456,1.781,457,1.052,458,1.781,459,1.781,460,1.052,461,1.868,462,1.868,463,1.052,464,3.311,465,1.052,466,1.052,467,1.052,468,1.052,469,1.052,470,1.052,471,1.436,472,1.052,473,1.052,474,1.781,475,3.71,476,3.049,477,0.848,478,1.052,479,1.052,480,1.052,481,2.316,482,1.052,483,1.052,484,1.781,485,1.052,486,1.052,487,2.845,488,1.052,489,0.614,490,0.614,491,1.052,492,1.052,493,1.436,494,1.781,495,1.052,496,2.316,497,1.052,498,1.052,499,1.052,500,1.052,501,1.052,502,0.848,503,0.848,504,1.052,505,2.316,506,1.052,507,1.052,508,0.848,509,2.316,510,1.052,511,1.052,512,1.052,513,1.052,514,1.052,515,1.052,516,1.052,517,1.052,518,1.436,519,1.052,520,1.436,521,1.052,522,1.436,523,0.848,524,1.052,525,1.052,526,0.848,527,1.052,528,1.781,529,1.052,530,1.052,531,0.848,532,1.052,533,1.052,534,0.848,535,0.848,536,1.052,537,2.316,538,1.052,539,1.052,540,1.781,541,1.781,542,1.781,543,1.781,544,1.781,545,1.436,546,1.781,547,1.781,548,1.436,549,2.726,550,2.459,551,1.052,552,2.316,553,2.726,554,1.781,555,1.052,556,3.049,557,3.865,558,1.052,559,1.052,560,1.052,561,1.052,562,1.052,563,3.865,564,1.781,565,3.311,566,2.316,567,1.052,568,1.052,569,1.052,570,1.052,571,1.781,572,2.248,573,1.781,574,0.848,575,1.052,576,0.714,577,1.052,578,2.604,579,1.052,580,1.052,581,0.714,582,0.714,583,1.052,584,3.311,585,1.781,586,3.049,587,1.052,588,1.052,589,1.052,590,2.459,591,1.052,592,1.052,593,1.052,594,1.781,595,1.052,596,1.781,597,1.052,598,1.781,599,1.781,600,1.781,601,1.781,602,1.781,603,2.726,604,1.781,605,1.052,606,1.052,607,1.052,608,1.052,609,2.459,610,3.528,611,1.052,612,1.052,613,1.436,614,1.052,615,1.052,616,1.052,617,1.781,618,1.052,619,1.052,620,2.316,621,1.052,622,1.052,623,1.052,624,1.052,625,1.052,626,1.052,627,1.052,628,1.052,629,2.726,630,1.052,631,1.436,632,1.781,633,1.781,634,1.781,635,1.052,636,1.781,637,1.781,638,1.781,639,1.052,640,1.052,641,1.052,642,1.052,643,1.052,644,1.052,645,1.052,646,1.781,647,1.052,648,1.052,649,1.052,650,1.052,651,0.848,652,1.436,653,0.848,654,1.052,655,1.052,656,1.052,657,1.052,658,1.052,659,1.052,660,1.052,661,1.052,662,1.052,663,1.052]],["title/components/NavbarComponent.html",[0,0.132,105,0.539]],["body/components/NavbarComponent.html",[0,0.239,1,0.568,2,1.159,3,0.758,4,0.568,5,0.99,6,0.99,7,0.99,8,0.99,9,0.483,11,0.868,15,1.013,18,1.305,19,0.758,20,0.758,22,1.958,23,0.99,24,1.807,25,1.585,26,1.322,28,1.322,30,0.568,38,0.758,41,1.141,43,2.251,45,1.714,48,0.758,49,0.052,50,1.141,51,0.568,52,0.758,57,1.141,58,1.159,71,0.758,72,0.483,73,0.568,77,0.483,79,0.568,80,0.868,83,0.659,84,0.659,85,0.868,94,0.758,95,1.322,96,1.322,97,0.99,98,1.588,99,0.99,100,0.99,101,0.568,102,0.99,103,1.322,104,0.99,105,0.911,106,0.99,107,0.483,108,0.99,109,0.568,110,0.99,111,0.99,112,0.99,113,0.99,114,0.035,115,0.035,144,1.466,151,2.619,157,2.619,274,1.96,275,1.685,279,1.96,280,2.329,342,2.251,350,1.96,372,3.544,385,2.205,392,1.685,417,3.738,430,2.619,439,2.619,440,1.96,441,1.96,442,1.96,531,2.329,534,2.329,535,2.329,548,2.329,572,1.96,664,2.329,665,3.11,666,4.343,667,3.857,668,3.857,669,4.343,670,2.887,671,2.887,672,4.343,673,2.887,674,4.83,675,2.887,676,2.887,677,4.343,678,2.887,679,2.887,680,2.887,681,2.887,682,2.887,683,2.887,684,3.857,685,3.857,686,2.887,687,2.619]],["title/components/UserProfileComponent.html",[0,0.132,107,0.459]],["body/components/UserProfileComponent.html",[0,0.147,1,0.31,2,0.745,3,0.487,4,0.31,5,0.54,6,0.54,7,0.54,8,0.54,9,0.264,11,1.403,15,0.651,18,1.336,19,0.414,20,0.414,22,2.27,23,0.54,24,1.568,25,1.376,26,0.849,28,0.849,30,0.31,31,0.745,38,0.651,41,1.279,48,0.804,49,0.052,50,1.279,51,0.825,52,0.804,57,1.202,58,1.494,66,1.565,67,1.361,68,1.361,71,0.788,72,0.264,73,0.31,77,0.264,79,0.31,80,1.376,83,0.359,84,0.359,85,0.745,94,0.414,95,0.849,96,0.849,97,0.54,98,1.19,99,0.54,100,0.54,101,0.31,102,0.54,103,0.849,104,0.54,105,0.31,106,0.54,107,0.581,108,0.54,109,0.31,110,0.54,111,0.849,112,0.54,113,0.54,114,0.023,115,0.023,145,3.343,149,1.446,151,2.723,159,1.998,164,1.355,167,0.967,170,2.358,171,1.565,174,2.449,177,3.046,199,2.723,202,1.069,203,1.682,204,1.917,205,2.358,212,1.682,218,2.47,220,3.221,221,1.069,244,1.696,249,1.069,254,1.27,255,1.682,268,0.919,275,0.919,295,1.682,324,1.101,359,1.555,360,2.723,364,1.788,366,1.788,368,1.917,371,2.027,374,0.919,381,1.069,383,0.919,384,0.919,385,0.799,387,1.446,392,0.919,395,1.27,398,1.27,399,2.537,400,2.537,401,2.537,416,2.47,425,1.998,430,2.564,437,1.998,439,1.682,440,2.08,441,1.682,442,2.564,455,2.47,461,1.998,462,1.27,471,1.27,477,1.27,489,0.919,490,0.919,493,1.998,502,1.998,503,1.998,508,1.27,518,2.47,520,1.27,522,1.998,523,1.27,576,1.069,688,3.343,689,1.27,690,3.063,691,2.478,692,3.063,693,3.063,694,3.046,695,3.063,696,3.777,697,3.777,698,3.777,699,3.777,700,3.063,701,3.777,702,1.575,703,3.473,704,4.196,705,2.478,706,2.478,707,1.575,708,1.575,709,1.575,710,1.575,711,1.575,712,1.575,713,1.575,714,2.478,715,1.575,716,1.575,717,1.575,718,3.777,719,1.575,720,1.575,721,1.575,722,1.27,723,1.27,724,1.682,725,1.575,726,1.575,727,1.575,728,1.575,729,1.575,730,3.063,731,1.575,732,1.575,733,1.575,734,1.575,735,1.575,736,2.47,737,1.575,738,1.27,739,1.575,740,2.478,741,1.575,742,1.575,743,1.575,744,1.575,745,1.575,746,1.575,747,2.478,748,1.575,749,3.473,750,2.478,751,1.575,752,1.575,753,1.575,754,1.575,755,1.575,756,1.575,757,1.575,758,2.478,759,1.575,760,1.575,761,2.478,762,1.575,763,1.575,764,1.575,765,1.575,766,1.575,767,1.575,768,1.575,769,1.575,770,1.575,771,2.478,772,2.478,773,3.473,774,2.478,775,2.478,776,2.478,777,2.478,778,1.998,779,2.478,780,2.478]],["title/components/UserRegistrationFormComponent.html",[0,0.132,73,0.539]],["body/components/UserRegistrationFormComponent.html",[0,0.18,1,0.431,2,0.957,3,0.626,4,0.431,5,0.751,6,0.751,7,0.751,8,0.751,9,0.367,11,1.312,15,0.836,18,1.374,19,1.434,20,0.576,23,0.751,24,1.708,25,1.498,26,1.091,28,1.091,30,0.431,31,1.126,32,1.915,33,1.827,38,0.984,41,1.234,45,2.024,48,0.576,49,0.052,50,1.234,51,0.858,52,0.576,57,0.836,58,1.236,60,1.28,66,1.604,67,0.974,68,0.974,71,0.924,72,0.367,73,0.858,74,2.81,76,0.974,77,0.367,79,0.431,80,0.659,83,0.5,84,0.5,85,1.126,94,0.576,95,1.091,96,1.091,97,0.751,98,1.409,99,0.751,100,0.751,101,0.431,102,0.751,103,1.091,104,0.751,105,0.431,106,0.751,107,0.367,108,0.751,109,0.431,110,0.751,111,0.751,112,0.751,113,0.751,114,0.029,115,0.029,119,0.974,164,1.704,167,1.704,171,1.462,195,1.768,196,3.022,197,3.316,204,1.902,244,0.855,324,1.414,343,2.161,358,1.488,359,1.902,360,2.544,361,3.022,362,2.567,363,3.673,364,2.549,366,2.659,368,2.217,369,1.488,370,3.521,371,2.549,374,1.28,375,3.022,378,1.768,381,2.544,383,1.28,384,1.28,385,1.113,387,1.28,388,1.768,389,1.768,399,1.858,400,1.858,401,1.858,487,1.768,489,1.28,490,1.28,581,2.791,688,3.268,694,3.316,724,1.488,736,3.022,738,3.022,778,1.768,781,4.366,782,3.183,783,3.183,784,3.747,785,3.747,786,4.112,787,2.192,788,2.192,789,2.192,790,2.192,791,3.183,792,2.192,793,2.192,794,3.183,795,2.192,796,2.192,797,2.192,798,2.192,799,1.768,800,1.768,801,1.768,802,1.768,803,1.768,804,2.192,805,2.192,806,2.192,807,2.192,808,2.192,809,2.192,810,3.316]],["title/components/WelcomePageComponent.html",[0,0.132,109,0.539]],["body/components/WelcomePageComponent.html",[0,0.206,1,0.472,2,1.021,3,0.668,4,0.472,5,0.823,6,0.823,7,0.823,8,0.823,9,0.402,11,1.36,15,0.892,18,1.188,19,1.126,20,1.188,23,0.823,24,1.763,25,1.561,26,1.165,28,1.165,30,0.472,31,1.185,32,1.326,33,2.146,37,3.648,38,0.892,39,1.937,40,3.071,41,1.188,45,1.752,46,3.18,48,0.631,49,0.052,50,1.268,51,0.668,52,0.631,56,2.307,57,1.036,58,1.412,60,1.983,71,0.889,72,0.402,73,0.668,74,1.402,75,2.307,76,1.067,77,0.569,78,1.219,79,0.472,80,0.722,83,0.548,84,0.548,85,0.722,86,1.937,87,1.937,89,2.307,90,2.74,91,1.937,94,0.631,95,1.351,96,1.165,97,0.823,98,1.469,99,0.823,100,0.823,101,0.472,102,0.823,103,1.165,104,0.823,105,0.472,106,0.823,107,0.402,108,0.823,109,0.889,110,1.69,111,1.469,112,0.823,113,0.823,114,0.031,115,0.031,119,1.067,154,3.457,160,1.937,161,1.631,171,0.937,304,2.74,324,1.51,335,2.307,359,2.002,368,2.297,392,1.402,489,1.402,490,1.402,545,2.74,550,1.937,572,2.911,574,1.937,576,1.631,578,1.402,581,2.307,582,1.631,590,3.457,609,1.937,613,2.74,631,1.937,651,1.937,652,3.18,653,1.937,665,3.648,687,1.631,724,1.631,799,1.937,800,1.937,801,1.937,802,1.937,803,1.937,810,2.74,811,3.787,812,3.787,813,1.937,814,3.943,815,3.398,816,4.524,817,2.402,818,3.943,819,2.402,820,2.402,821,2.402,822,2.402,823,2.307,824,3.398,825,2.402,826,2.402,827,2.402,828,2.402,829,2.402,830,2.402,831,2.402,832,2.402,833,2.402,834,2.402,835,2.402]],["title/coverage.html",[836,3.003]],["body/coverage.html",[0,0.259,1,0.708,9,0.603,10,2.903,19,1.167,49,0.051,51,0.708,73,0.708,74,2.101,77,0.603,78,1.827,79,0.708,81,2.444,101,0.708,105,0.708,107,0.603,109,0.708,114,0.041,115,0.041,145,2.444,163,2.256,164,1.404,166,3.017,167,1.734,168,3.017,244,1.404,255,2.444,271,2.444,316,2.444,317,2.903,318,2.903,330,2.903,331,2.444,332,2.903,357,2.903,358,3.017,404,2.903,405,2.903,578,2.939,582,2.444,664,2.903,688,3.017,689,2.903,811,2.903,812,2.903,813,2.903,823,2.444,836,2.903,837,3.6,838,3.6,839,3.6,840,2.903,841,4.444,842,3.6,843,3.6,844,3.6,845,3.6,846,3.6,847,3.6,848,3.6,849,3.6,850,3.6,851,3.6,852,3.6,853,3.6,854,3.6,855,3.6,856,3.6,857,3.6,858,3.6,859,3.6,860,3.6,861,3.6,862,3.6]],["title/dependencies.html",[119,1.463,863,1.853]],["body/dependencies.html",[49,0.051,72,0.673,114,0.043,115,0.043,119,1.788,136,3.833,137,3.227,144,2.042,268,2.348,722,3.244,723,3.244,864,4.023,865,4.752,866,4.023,867,4.023,868,5.46,869,4.023,870,4.023,871,4.023,872,4.023,873,4.023,874,4.023,875,4.023,876,4.023]],["title/index.html",[30,0.452,877,2.297,878,2.297]],["body/index.html",[49,0.046,114,0.046,115,0.046]],["title/modules.html",[118,1.891]],["body/modules.html",[49,0.045,114,0.045,115,0.045,117,2.516,118,2.189,128,2.189,137,2.927,161,2.927,879,4.311,880,4.311,881,4.948,882,4.311]],["title/overview.html",[883,3.003]],["body/overview.html",[1,1.056,2,1.112,49,0.051,73,0.959,77,0.817,79,0.959,94,0.972,101,0.959,105,0.959,107,0.817,109,0.959,114,0.041,115,0.041,116,1.878,117,3.3,118,1.878,119,1.644,120,2.984,121,2.984,122,2.984,123,2.512,124,2.984,125,2.984,126,2.984,127,2.984,128,2.478,129,3.645,130,2.984,131,2.512,143,2.16,165,2.512,883,2.984,884,4.88,885,3.7]],["title/properties.html",[31,0.989,863,1.853]],["body/properties.html",[31,1.313,49,0.048,114,0.046,115,0.046,526,3.522,886,4.368]],["title/routes.html",[143,2.174]],["body/routes.html",[49,0.046,114,0.046,115,0.046,143,2.566]],["title/miscellaneous/variables.html",[887,1.853,888,2.655]],["body/miscellaneous/variables.html",[30,0.791,49,0.051,51,0.791,66,1.569,67,2.112,68,2.112,114,0.043,115,0.043,166,2.731,167,1.974,168,3.227,270,2.731,271,3.227,272,3.244,578,2.348,687,2.731,823,3.227,840,3.244,887,3.244,888,3.244,889,4.023,890,4.023,891,4.023,892,4.023,893,4.752,894,4.752,895,4.023,896,4.023]]],"invertedIndex":[["",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":578,"title":{},"body":{"components/MovieCardComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":886,"title":{},"body":{"properties.html":{}}}],["0.13.0",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":604,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["0.25",{"_index":618,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["0.3s",{"_index":640,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["0.8",{"_index":650,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["0/1",{"_index":842,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":856,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":848,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":687,"title":{},"body":{"components/NavbarComponent.html":{},"components/WelcomePageComponent.html":{},"miscellaneous/variables.html":{}}}],["1/1",{"_index":847,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":860,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":582,"title":{},"body":{"components/MovieCardComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["1000",{"_index":655,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["100px",{"_index":608,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["100vh",{"_index":649,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["100vw",{"_index":552,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["10px",{"_index":610,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["12px",{"_index":601,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["15px",{"_index":627,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["16",{"_index":859,"title":{},"body":{"coverage.html":{}}}],["16.2.0",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["16.2.10",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["16.2.9",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["16px",{"_index":616,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["17/18",{"_index":846,"title":{},"body":{"coverage.html":{}}}],["188",{"_index":559,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["2",{"_index":884,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":855,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":401,"title":{},"body":{"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["203",{"_index":603,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["20px",{"_index":564,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["228",{"_index":560,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["240",{"_index":598,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["280px",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/WelcomePageComponent.html":{}}}],["3/6",{"_index":850,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":858,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":857,"title":{},"body":{"coverage.html":{}}}],["40px",{"_index":592,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["5/8",{"_index":852,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":849,"title":{},"body":{"coverage.html":{}}}],["500px",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["5px",{"_index":661,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["6.2",{"_index":797,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["6/7",{"_index":844,"title":{},"body":{"coverage.html":{}}}],["60px",{"_index":828,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["62",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":621,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["66",{"_index":854,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":615,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["7.8.0",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":619,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["8",{"_index":885,"title":{},"body":{"overview.html":{}}}],["85",{"_index":843,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":600,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["9",{"_index":735,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["90vh",{"_index":659,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["90vw",{"_index":657,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["94",{"_index":845,"title":{},"body":{"coverage.html":{}}}],["absolute",{"_index":660,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["accessors",{"_index":668,"title":{},"body":{"components/NavbarComponent.html":{}}}],["accommodate",{"_index":624,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["accordingly",{"_index":495,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["actions",{"_index":635,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["actual_component",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["add",{"_index":628,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["added",{"_index":425,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["additional",{"_index":327,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["adds",{"_index":201,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["addtofavorites",{"_index":172,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["addtofavorites(movieid",{"_index":423,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["addtofavorites(username",{"_index":198,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["adjust",{"_index":631,"title":{},"body":{"components/MovieCardComponent.html":{},"components/WelcomePageComponent.html":{}}}],["adjusted",{"_index":593,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["align",{"_index":613,"title":{},"body":{"components/MovieCardComponent.html":{},"components/WelcomePageComponent.html":{}}}],["allmovies",{"_index":496,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["allow",{"_index":594,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["angular",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/animations",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":723,"title":{},"body":{"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"injectables/FetchApiDataService.html":{}}}],["angular/compiler",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":722,"title":{},"body":{"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["angular/material/dialog",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["angular/material/snack",{"_index":384,"title":{},"body":{"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["angular/platform",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"dependencies.html":{}}}],["animate('1s",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animations",{"_index":824,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["api",{"_index":167,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":271,"title":{},"body":{"injectables/FetchApiDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["app's",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app.component.html",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["appmodule",{"_index":117,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":128,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["around",{"_index":658,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["array",{"_index":462,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["assigning",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["assuming",{"_index":392,"title":{},"body":{"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["authentication",{"_index":531,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{}}}],["authorization",{"_index":283,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["auto",{"_index":548,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{}}}],["available",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/WelcomePageComponent.html":{},"modules.html":{}}}],["back",{"_index":778,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["backend",{"_index":805,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["background",{"_index":556,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["bar",{"_index":385,"title":{},"body":{"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["based",{"_index":504,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["bearer",{"_index":284,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["being",{"_index":434,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["between",{"_index":611,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["birth",{"_index":774,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["birthday",{"_index":738,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["block",{"_index":596,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["body",{"_index":304,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/WelcomePageComponent.html":{}}}],["boolean",{"_index":430,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{}}}],["bootstrap",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":586,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["both",{"_index":606,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["bottom",{"_index":566,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["bound",{"_index":802,"title":{},"body":{"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["box",{"_index":584,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["boxes",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["brings",{"_index":795,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["browse",{"_index":881,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{}}}],["calc(100vh",{"_index":607,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["calc(100vw",{"_index":591,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["call",{"_index":292,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["called",{"_index":801,"title":{},"body":{"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["calls",{"_index":197,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserRegistrationFormComponent.html":{}}}],["card",{"_index":406,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["card.component",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["card.component.html",{"_index":408,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.scss",{"_index":407,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts",{"_index":405,"title":{},"body":{"components/MovieCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:102",{"_index":438,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:111",{"_index":457,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:125",{"_index":451,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:136",{"_index":424,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:155",{"_index":454,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:172",{"_index":446,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:181",{"_index":426,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:189",{"_index":444,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:201",{"_index":431,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:28",{"_index":468,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:34",{"_index":467,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:40",{"_index":465,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:46",{"_index":469,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:52",{"_index":422,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:58",{"_index":463,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:65",{"_index":443,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:73",{"_index":427,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:91",{"_index":460,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card/movie",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"coverage.html":{}}}],["cards",{"_index":474,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["catcherror",{"_index":263,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["catcherror(this.handleerror",{"_index":286,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["center",{"_index":652,"title":{},"body":{"components/MovieCardComponent.html":{},"components/WelcomePageComponent.html":{}}}],["changes",{"_index":780,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["check",{"_index":439,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{}}}],["checks",{"_index":759,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["class",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["clicked",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["client",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["close",{"_index":343,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["closeimagemodal",{"_index":413,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["closes",{"_index":529,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["cluster_appmodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":311,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["color",{"_index":557,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["column",{"_index":825,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"overview.html":{}}}],["console.error('error",{"_index":502,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["console.error('unexpected",{"_index":325,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["const",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["constructor",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":352,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor(data",{"_index":337,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor(dialog",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/WelcomePageComponent.html":{}}}],["constructor(fb",{"_index":702,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["constructor(fetchapidata",{"_index":369,"title":{},"body":{"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["constructor(http",{"_index":189,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["constructor(injector",{"_index":319,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["constructor(private",{"_index":274,"title":{},"body":{"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{},"components/NavbarComponent.html":{}}}],["constructor(public",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/WelcomePageComponent.html":{}}}],["constructor(router",{"_index":670,"title":{},"body":{"components/NavbarComponent.html":{}}}],["constructs",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{}}}],["container",{"_index":545,"title":{},"body":{"components/MovieCardComponent.html":{},"components/WelcomePageComponent.html":{}}}],["containing",{"_index":340,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["contains",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/LoginFormComponent.html":{}}}],["content",{"_index":335,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/WelcomePageComponent.html":{}}}],["content/body",{"_index":452,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["cover",{"_index":626,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["coverage",{"_index":836,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":796,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["creates",{"_index":192,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["current",{"_index":488,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["currentimagesrc",{"_index":409,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["currently",{"_index":483,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["cursor",{"_index":637,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["dark",{"_index":561,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["data",{"_index":171,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["data.content",{"_index":356,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["data.service",{"_index":383,"title":{},"body":{"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["data.service.ts",{"_index":168,"title":{},"body":{"injectables/FetchApiDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["data.service.ts:114",{"_index":230,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:126",{"_index":236,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:141",{"_index":219,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:16",{"_index":191,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:160",{"_index":200,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:173",{"_index":248,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:186",{"_index":251,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:203",{"_index":238,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:216",{"_index":207,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:233",{"_index":210,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:244",{"_index":240,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:29",{"_index":261,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:38",{"_index":257,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:46",{"_index":217,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:62",{"_index":234,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:79",{"_index":223,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:98",{"_index":225,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.title",{"_index":354,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["date",{"_index":773,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["declarations",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":344,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["decreased",{"_index":622,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["default",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["defines",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["deletes",{"_index":208,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["deleteuser",{"_index":173,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["dependencies",{"_index":119,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["details",{"_index":253,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["determines",{"_index":507,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["dialog",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["dialog'},{'name",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["dialog.component",{"_index":470,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["dialog.component.html",{"_index":334,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.scss",{"_index":333,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts",{"_index":332,"title":{},"body":{"components/InfoDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:13",{"_index":347,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:14",{"_index":338,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":346,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:28",{"_index":341,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog/info",{"_index":331,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/MovieCardComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":363,"title":{},"body":{"components/LoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["dialogs",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["different",{"_index":830,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["directed",{"_index":542,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["direction",{"_index":574,"title":{},"body":{"components/MovieCardComponent.html":{},"components/WelcomePageComponent.html":{}}}],["directive",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["directives",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["director",{"_index":226,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["director's",{"_index":228,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["directorname",{"_index":227,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["display",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["displayed",{"_index":449,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["displaying",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{}}}],["doctype",{"_index":475,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["documentation",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["duration",{"_index":400,"title":{},"body":{"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["during",{"_index":243,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["dynamic",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":579,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["ease",{"_index":641,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["edit",{"_index":749,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["editmode",{"_index":692,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["element",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["element's",{"_index":588,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["email",{"_index":736,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["empty",{"_index":215,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["enableeditmode",{"_index":696,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["enables",{"_index":767,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["endpoint",{"_index":294,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["ensure",{"_index":576,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["error",{"_index":244,"title":{},"body":{"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"coverage.html":{}}}],["error.error",{"_index":307,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["error.error.message",{"_index":310,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["error.message",{"_index":313,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["error.status}\\nmessage",{"_index":312,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["errorevent",{"_index":309,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["errorhandler",{"_index":323,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["errormessage",{"_index":305,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["errorresponse",{"_index":808,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["errors",{"_index":242,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["example",{"_index":829,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["except",{"_index":833,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["exit",{"_index":748,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["export",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["exports",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extracted",{"_index":214,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["extractresponsedata",{"_index":175,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["extractresponsedata(res",{"_index":209,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["extracts",{"_index":211,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["fadeinanimation",{"_index":823,"title":{},"body":{"components/WelcomePageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":442,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{}}}],["favorite",{"_index":220,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["favoritemovie?.title",{"_index":776,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["favoritemovieids",{"_index":461,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["favoritemovies",{"_index":296,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["favorites",{"_index":203,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["fb",{"_index":706,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["fetch",{"_index":374,"title":{},"body":{"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["fetchapidata",{"_index":364,"title":{},"body":{"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["fetchapidataservice",{"_index":164,"title":{"injectables/FetchApiDataService.html":{}},"body":{"injectables/FetchApiDataService.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"coverage.html":{}}}],["fetched",{"_index":477,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["fetches",{"_index":218,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserProfileComponent.html":{}}}],["fetching",{"_index":170,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["fetchmoviesandfavorites",{"_index":414,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["ff9999",{"_index":642,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["field",{"_index":393,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["fields",{"_index":752,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["fit",{"_index":625,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["fixed",{"_index":647,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["flag",{"_index":485,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["flex",{"_index":572,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/WelcomePageComponent.html":{}}}],["flix",{"_index":685,"title":{},"body":{"components/NavbarComponent.html":{}}}],["font",{"_index":632,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["forkjoin",{"_index":471,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["form",{"_index":360,"title":{},"body":{"components/LoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form'},{'name",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["form.component",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/WelcomePageComponent.html":{}}}],["form.component.html",{"_index":362,"title":{},"body":{"components/LoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.scss",{"_index":361,"title":{},"body":{"components/LoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts",{"_index":358,"title":{},"body":{"components/LoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:16",{"_index":373,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:21",{"_index":783,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:26",{"_index":380,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:27",{"_index":379,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:28",{"_index":382,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:31",{"_index":789,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:32",{"_index":378,"title":{},"body":{"components/LoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:33",{"_index":790,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:37",{"_index":377,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:39",{"_index":787,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:47",{"_index":788,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form/login",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["form/user",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["formbuilder",{"_index":703,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["formgroup",{"_index":718,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["found",{"_index":766,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["genre",{"_index":231,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["genrename",{"_index":232,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getallmovies",{"_index":176,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getfavoritemovies",{"_index":177,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserProfileComponent.html":{}}}],["getisloggedin",{"_index":675,"title":{},"body":{"components/NavbarComponent.html":{}}}],["getmoviebyid",{"_index":178,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getmoviebyid(movieid",{"_index":222,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getonedirector",{"_index":179,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getonedirector(directorname",{"_index":224,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getonegenre",{"_index":180,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getonegenre(genrename",{"_index":229,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getonemovie",{"_index":181,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getonemovie(title",{"_index":233,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getoneuser",{"_index":182,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getting",{"_index":877,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":183,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getuser(username",{"_index":237,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getuserdata",{"_index":697,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["globalerrorhandler",{"_index":316,"title":{"injectables/GlobalErrorHandler.html":{}},"body":{"injectables/GlobalErrorHandler.html":{},"coverage.html":{}}}],["goback",{"_index":698,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["graph",{"_index":882,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":562,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["grey",{"_index":662,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["grow",{"_index":831,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["handle",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{}}}],["handleerror",{"_index":184,"title":{},"body":{"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{}}}],["handleerror(error",{"_index":239,"title":{},"body":{"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{}}}],["handler.service.ts",{"_index":318,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"coverage.html":{}}}],["handler.service.ts:10",{"_index":322,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["handler.service.ts:6",{"_index":321,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["handles",{"_index":241,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["handling",{"_index":328,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["header",{"_index":630,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["headers",{"_index":282,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["height",{"_index":590,"title":{},"body":{"components/MovieCardComponent.html":{},"components/WelcomePageComponent.html":{}}}],["hidden",{"_index":570,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["holds",{"_index":798,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["hook",{"_index":490,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["horizontal",{"_index":573,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["hotpotatoes",{"_index":684,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hover",{"_index":537,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["hovered",{"_index":435,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["hoveredmovieid",{"_index":410,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["hovericon",{"_index":415,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["hovericon(movieid",{"_index":428,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["html",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["http",{"_index":194,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["httpclient",{"_index":190,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["httpclientmodule",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":266,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["httpheaders",{"_index":265,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["https://hotpotatoes.onrender.com",{"_index":272,"title":{},"body":{"injectables/FetchApiDataService.html":{},"miscellaneous/variables.html":{}}}],["icon",{"_index":433,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["icons",{"_index":538,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["id",{"_index":205,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["identifier",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":221,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["image",{"_index":448,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["imageurl",{"_index":447,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["img",{"_index":656,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["implements",{"_index":324,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["import",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["important",{"_index":645,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["imports",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["include",{"_index":587,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["index",{"_index":30,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":436,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["infodialogcomponent",{"_index":101,"title":{"components/InfoDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["information",{"_index":516,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["informational",{"_index":351,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["initialization",{"_index":491,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["initialized",{"_index":803,"title":{},"body":{"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["initializeform",{"_index":699,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["initializes",{"_index":724,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["inject",{"_index":348,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["inject(mat_dialog_data",{"_index":345,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["injectable",{"_index":163,"title":{"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{}},"body":{"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{},"coverage.html":{}}}],["injectables",{"_index":165,"title":{},"body":{"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{},"overview.html":{}}}],["injector",{"_index":320,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["injects",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["inline",{"_index":571,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["input",{"_index":791,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["inputs",{"_index":782,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["instance",{"_index":193,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["instanceof",{"_index":308,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["isfavorite",{"_index":416,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["isfavorite(movieid",{"_index":437,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["ishovered",{"_index":429,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["isloggedin",{"_index":669,"title":{},"body":{"components/NavbarComponent.html":{}}}],["items",{"_index":651,"title":{},"body":{"components/MovieCardComponent.html":{},"components/WelcomePageComponent.html":{}}}],["justify",{"_index":653,"title":{},"body":{"components/MovieCardComponent.html":{},"components/WelcomePageComponent.html":{}}}],["key",{"_index":482,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["larger",{"_index":525,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["layout",{"_index":577,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["left",{"_index":648,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["legend",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"overview.html":{}}}],["lifecycle",{"_index":489,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["liked",{"_index":481,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["likedmovies",{"_index":411,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["line",{"_index":301,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["list",{"_index":518,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["literal",{"_index":466,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["little",{"_index":623,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["local",{"_index":762,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["localstorage.getitem('token",{"_index":280,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/NavbarComponent.html":{}}}],["localstorage.getitem('username",{"_index":295,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["localstorage.removeitem('token",{"_index":534,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{}}}],["localstorage.removeitem('username",{"_index":535,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{}}}],["localstorage.setitem('token",{"_index":390,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["localstorage.setitem('username",{"_index":395,"title":{},"body":{"components/LoginFormComponent.html":{},"components/UserProfileComponent.html":{}}}],["location",{"_index":704,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["logged",{"_index":677,"title":{},"body":{"components/NavbarComponent.html":{}}}],["logic",{"_index":329,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["login",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["logindata",{"_index":365,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginformcomponent",{"_index":77,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginuser",{"_index":367,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["logout",{"_index":674,"title":{},"body":{"components/NavbarComponent.html":{}}}],["logs",{"_index":258,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["main",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/WelcomePageComponent.html":{}}}],["make",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/WelcomePageComponent.html":{}}}],["making",{"_index":196,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserRegistrationFormComponent.html":{}}}],["managing",{"_index":473,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["mandatory",{"_index":555,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["map",{"_index":269,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["map(this.extractresponsedata",{"_index":289,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["mapping",{"_index":478,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["margin",{"_index":609,"title":{},"body":{"components/MovieCardComponent.html":{},"components/WelcomePageComponent.html":{}}}],["marked",{"_index":508,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["mat",{"_index":629,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["mat_dialog_data",{"_index":349,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["matching",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/WelcomePageComponent.html":{}}}],["matdialogref",{"_index":370,"title":{},"body":{"components/LoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["material",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["matsnackbar",{"_index":371,"title":{},"body":{"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["max",{"_index":620,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["message",{"_index":245,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/LoginFormComponent.html":{}}}],["messages",{"_index":376,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["metadata",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["method",{"_index":342,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{}}}],["methods",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["miscellaneous",{"_index":887,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["missing",{"_index":302,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["modal",{"_index":487,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["modal/dialogs",{"_index":818,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["mode",{"_index":750,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["module",{"_index":116,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["modules",{"_index":118,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["movie",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["movie's",{"_index":511,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["movie._id",{"_index":761,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["movie?.director?.name",{"_index":543,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["movie?.genre?.name",{"_index":541,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["movie?.title",{"_index":540,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["moviecardcomponent",{"_index":79,"title":{"components/MovieCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["movieid",{"_index":199,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["movieid).subscribe",{"_index":520,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["movies",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{}}}],["movies/director",{"_index":290,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["movies/genre",{"_index":291,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["myflix",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["named",{"_index":394,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["navbar",{"_index":665,"title":{},"body":{"components/NavbarComponent.html":{},"components/WelcomePageComponent.html":{}}}],["navbar's",{"_index":834,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["navbar'},{'name",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["navbar.component.html",{"_index":667,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":666,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":105,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigates",{"_index":768,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["navigating",{"_index":533,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["navigation",{"_index":672,"title":{},"body":{"components/NavbarComponent.html":{}}}],["needed",{"_index":634,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["new",{"_index":255,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["next",{"_index":387,"title":{},"body":{"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["ngmodule",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":368,"title":{},"body":{"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["none",{"_index":484,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["normal",{"_index":595,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["notifications",{"_index":786,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["now",{"_index":567,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["nowrap",{"_index":551,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["null",{"_index":464,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["object",{"_index":216,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{}}}],["observable",{"_index":206,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["occupy",{"_index":832,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["occurred",{"_index":326,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["ok",{"_index":399,"title":{},"body":{"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["onclose",{"_index":336,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["one",{"_index":293,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["oninit",{"_index":359,"title":{},"body":{"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["onlogout",{"_index":417,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{}}}],["opacity",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["opened",{"_index":784,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["openimagemodal",{"_index":418,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["openimagemodal(imageurl",{"_index":445,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["openinfodialog",{"_index":419,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["openinfodialog(title",{"_index":450,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["opening",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/WelcomePageComponent.html":{}}}],["openlogindialog",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["openmoviesdialog",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["opens",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/WelcomePageComponent.html":{}}}],["openuserlogindialog",{"_index":816,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["openuserregistrationdialog",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/WelcomePageComponent.html":{}}}],["optional",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["otherwise",{"_index":441,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{}}}],["out",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"overview.html":{}}}],["overflow",{"_index":546,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["overview",{"_index":883,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":863,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":563,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["page",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["page.component.html",{"_index":815,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.scss",{"_index":814,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts",{"_index":813,"title":{},"body":{"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["page.component.ts:13",{"_index":817,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:20",{"_index":822,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:26",{"_index":819,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:33",{"_index":821,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:43",{"_index":820,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page/welcome",{"_index":812,"title":{},"body":{"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["param",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["parameters",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["passed",{"_index":339,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["password",{"_index":381,"title":{},"body":{"components/LoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["path",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pipe",{"_index":288,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["pipe(catcherror(this.handleerror",{"_index":300,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["pipe(map(this.extractresponsedata",{"_index":285,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["pointer",{"_index":638,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["populate",{"_index":756,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["position",{"_index":646,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["pre",{"_index":644,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["previous",{"_index":769,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["primary",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["private",{"_index":174,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile'},{'name",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["profile.component",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["profile.component.html",{"_index":691,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.scss",{"_index":690,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts",{"_index":689,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:113",{"_index":712,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:122",{"_index":715,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:142",{"_index":707,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:15",{"_index":719,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:150",{"_index":710,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:16",{"_index":720,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:17",{"_index":717,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:18",{"_index":705,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:31",{"_index":713,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:41",{"_index":711,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:55",{"_index":716,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:74",{"_index":709,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:94",{"_index":708,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/user",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profileform",{"_index":693,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["properties",{"_index":31,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"properties.html":{}}}],["property",{"_index":476,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["provided",{"_index":505,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["providedin",{"_index":273,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["providers",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["radius",{"_index":612,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["red",{"_index":663,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["redirect",{"_index":681,"title":{},"body":{"components/NavbarComponent.html":{}}}],["reference",{"_index":375,"title":{},"body":{"components/LoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["registers",{"_index":262,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["registeruser",{"_index":781,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["registration",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["remove",{"_index":777,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["removed",{"_index":455,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["removefavorite",{"_index":700,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["removefavorite(movieid",{"_index":714,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["removefromfavorites",{"_index":185,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["removefromfavorites(movieid",{"_index":453,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["removefromfavorites(username",{"_index":247,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["removes",{"_index":249,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["removing",{"_index":530,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["rendering",{"_index":472,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["representing",{"_index":350,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{}}}],["required",{"_index":799,"title":{},"body":{"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["res",{"_index":213,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["reset",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":212,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/LoginFormComponent.html":{},"components/UserProfileComponent.html":{}}}],["responsible",{"_index":169,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["result",{"_index":388,"title":{},"body":{"components/LoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["result.token",{"_index":391,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["results",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":275,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{}}}],["returns",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["rgb(176",{"_index":558,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["rgb(240",{"_index":597,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["rgba(0",{"_index":617,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["rgba(203",{"_index":602,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["right",{"_index":636,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{}}}],["root'},{'name",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["route",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["router",{"_index":372,"title":{},"body":{"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{}}}],["routermodule",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":143,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module.ts",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":575,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["rxjs",{"_index":268,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":264,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["save",{"_index":779,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["saves",{"_index":739,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["saveuserdata",{"_index":701,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["scroll",{"_index":553,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["selector",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["sends",{"_index":804,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["service",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["services",{"_index":800,"title":{},"body":{"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["sets",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/UserProfileComponent.html":{}}}],["shadow",{"_index":599,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["shadows",{"_index":605,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["showing",{"_index":785,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["showmodal",{"_index":412,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["sides",{"_index":568,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["sign",{"_index":810,"title":{},"body":{"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["signup",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["single",{"_index":235,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["sizes",{"_index":633,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["sizing",{"_index":585,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["snackbar",{"_index":366,"title":{},"body":{"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["snap",{"_index":554,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["space",{"_index":550,"title":{},"body":{"components/MovieCardComponent.html":{},"components/WelcomePageComponent.html":{}}}],["spacer",{"_index":686,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/.../animations.ts",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fetch",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/animations.ts",{"_index":840,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:18",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/fetch",{"_index":166,"title":{},"body":{"injectables/FetchApiDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/global",{"_index":317,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"coverage.html":{}}}],["src/app/info",{"_index":330,"title":{},"body":{"components/InfoDialogComponent.html":{},"coverage.html":{}}}],["src/app/login",{"_index":357,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["src/app/movie",{"_index":404,"title":{},"body":{"components/MovieCardComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":664,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:12",{"_index":671,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:22",{"_index":673,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:31",{"_index":676,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/user",{"_index":688,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"coverage.html":{}}}],["src/app/welcome",{"_index":811,"title":{},"body":{"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["stack",{"_index":826,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["start",{"_index":614,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["started",{"_index":878,"title":{"index.html":{}},"body":{}}],["state",{"_index":494,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["state('void",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":839,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":512,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["string",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"components/InfoDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["styleurls",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["subscribe",{"_index":499,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["success",{"_index":794,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["successful",{"_index":398,"title":{},"body":{"components/LoginFormComponent.html":{},"components/UserProfileComponent.html":{}}}],["successfully",{"_index":745,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["support",{"_index":879,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":880,"title":{},"body":{"modules.html":{}}}],["synopsis",{"_index":544,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["table",{"_index":862,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":580,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["templateurl",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["text",{"_index":835,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["they're",{"_index":480,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.addtofavorites(movie._id",{"_index":515,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.content",{"_index":355,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["this.currentimagesrc",{"_index":527,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.dialog.open(infodialogcomponent",{"_index":517,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.dialog.open(loginformcomponent",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/WelcomePageComponent.html":{}}}],["this.dialog.open(moviecardcomponent",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialog.open(userregistrationformcomponent",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/WelcomePageComponent.html":{}}}],["this.dialogref.close",{"_index":389,"title":{},"body":{"components/LoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["this.editmode",{"_index":747,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.fb.group",{"_index":729,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.fetchapidata.addtofavorites(username",{"_index":519,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.fetchapidata.getallmovies",{"_index":497,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.fetchapidata.getfavoritemovies",{"_index":498,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.fetchapidata.getfavoritemovies().subscribe",{"_index":757,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.fetchapidata.getuser(username).subscribe",{"_index":753,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.fetchapidata.removefromfavorites(username",{"_index":523,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.fetchapidata.updateuser(this.profileform.value).subscribe",{"_index":742,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.fetchapidata.userlogin(this.logindata).subscribe",{"_index":386,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.fetchapidata.userregistration(this.userdata).subscribe",{"_index":806,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["this.fetchmoviesandfavorites",{"_index":492,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.getfavoritemovies",{"_index":727,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.getuserdata",{"_index":726,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.hoveredmovieid",{"_index":539,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.http.delete(`${apiurl}users/${username}/movies/${movieid",{"_index":298,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["this.http.delete(apiurl",{"_index":303,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["this.http.get(`${apiurl}movies/${movieid",{"_index":287,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["this.http.get(apiurl",{"_index":281,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["this.http.post(`${apiurl}users/${username}/movies/${movieid",{"_index":297,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["this.http.post(apiurl",{"_index":276,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["this.http.put(apiurl",{"_index":299,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["this.initializeform",{"_index":725,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.isfavorite(movie._id",{"_index":513,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.likedmovies[id",{"_index":506,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.likedmovies[movieid",{"_index":509,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.location.back",{"_index":770,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.logindata.username",{"_index":396,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.movies",{"_index":500,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.profileform",{"_index":728,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.profileform.patchvalue(userdata",{"_index":755,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.profileform.valid",{"_index":741,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.removefromfavorites(movie._id",{"_index":514,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.router.navigate(['/login",{"_index":536,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.router.navigate(['/welcome",{"_index":678,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['movies",{"_index":402,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.showmodal",{"_index":528,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.snackbar.open('added",{"_index":521,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.snackbar.open('error",{"_index":503,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.snackbar.open('login",{"_index":397,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.snackbar.open('movie",{"_index":764,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.snackbar.open('please",{"_index":751,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.snackbar.open('profile",{"_index":743,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.snackbar.open('removed",{"_index":524,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.snackbar.open('username",{"_index":765,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.snackbar.open(error",{"_index":522,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.snackbar.open(errorresponse.error",{"_index":809,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["this.snackbar.open(result",{"_index":807,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["this.snackbar.open(result.error.message",{"_index":403,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.title",{"_index":353,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["this.updatelikedmoviesbasedonfavorites(favoritemovies",{"_index":501,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.userdata",{"_index":754,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.userfavoritemovies",{"_index":758,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.userfavoritemovies.filter(movie",{"_index":763,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.userfavoritemovies.some(movie",{"_index":760,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["throughout",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["throwerror",{"_index":267,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["throwerror(errormessage",{"_index":315,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["throwing",{"_index":246,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["title",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"components/InfoDialogComponent.html":{},"components/MovieCardComponent.html":{}}}],["toggled",{"_index":458,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["togglefavorite",{"_index":420,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["togglefavorite(movie",{"_index":456,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["toggles",{"_index":510,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["token",{"_index":279,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{}}}],["tokens",{"_index":532,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["tooltip",{"_index":643,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["top",{"_index":565,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["total",{"_index":589,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["transition",{"_index":639,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["transition(':enter",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["trigger('fadeinanimation",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":440,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{}}}],["tslib",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"injectables/GlobalErrorHandler.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unknown",{"_index":306,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["up",{"_index":581,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["update",{"_index":493,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["updated",{"_index":744,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updateduser",{"_index":254,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserProfileComponent.html":{}}}],["updateduser.username",{"_index":746,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updatelikedmoviesbasedonfavorites",{"_index":421,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["updatelikedmoviesbasedonfavorites(favoritemovieids",{"_index":459,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["updates",{"_index":252,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["updateuser",{"_index":186,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["updateuser(updateduser",{"_index":250,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["url",{"_index":270,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":793,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["used",{"_index":195,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserRegistrationFormComponent.html":{}}}],["user",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["user's",{"_index":202,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["userdata",{"_index":694,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["userdata?.birthday",{"_index":775,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["userdata?.email",{"_index":772,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["userdata?.username",{"_index":771,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["userdetails",{"_index":259,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userdetails).pipe(catcherror(this.handleerror",{"_index":278,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userfavoritemovies",{"_index":695,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["userlogin",{"_index":187,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userlogin(userdetails",{"_index":256,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["username",{"_index":204,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["userprofilecomponent",{"_index":107,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userregistration",{"_index":188,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userregistration(userdetails",{"_index":260,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userregistrationformcomponent",{"_index":73,"title":{"components/UserRegistrationFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":277,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["using",{"_index":683,"title":{},"body":{"components/NavbarComponent.html":{}}}],["valid",{"_index":740,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["validators",{"_index":721,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["validators.email",{"_index":737,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["validators.minlength(5",{"_index":731,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["validators.pattern(/^[a",{"_index":732,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["validators.required",{"_index":730,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["value",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":479,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["var",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["variable",{"_index":841,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":888,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":526,"title":{},"body":{"components/MovieCardComponent.html":{},"properties.html":{}}}],["vertically",{"_index":827,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["view",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["viewport",{"_index":583,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["void",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/GlobalErrorHandler.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["want",{"_index":680,"title":{},"body":{"components/NavbarComponent.html":{}}}],["welcome",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["welcomepagecomponent",{"_index":109,"title":{"components/WelcomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InfoDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wherever",{"_index":679,"title":{},"body":{"components/NavbarComponent.html":{}}}],["whether",{"_index":486,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["white",{"_index":549,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["whose",{"_index":432,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["width",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/WelcomePageComponent.html":{}}}],["window.alert(errormessage",{"_index":314,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["x",{"_index":547,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["y",{"_index":569,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["you'll",{"_index":792,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["you're",{"_index":682,"title":{},"body":{"components/NavbarComponent.html":{}}}],["z",{"_index":654,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["z0",{"_index":734,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["za",{"_index":733,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["zone.js",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        AppComponent is the root component of the application.\nIt contains methods to open dialogs for user registration, login, and displaying movies.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openLoginDialog\n                            \n                            \n                                openMoviesDialog\n                            \n                            \n                                openUserRegistrationDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:18\n                            \n                        \n\n                \n                    \n                            Constructs the AppComponent and injects the MatDialog service for opening dialog boxes.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Angular Material Dialog service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openLoginDialog\n                        \n                    \n                \n            \n            \n                \nopenLoginDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:39\n                        \n                    \n\n\n            \n                \n                        Opens the login dialog.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openMoviesDialog\n                        \n                    \n                \n            \n            \n                \nopenMoviesDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Opens the dialog to display movies.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserRegistrationDialog\n                        \n                    \n                \n            \n            \n                \nopenUserRegistrationDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:29\n                        \n                    \n\n\n            \n                \n                        Opens the user registration dialog when the signup button is clicked.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:24\n                        \n                    \n\n            \n                \n                    - The Angular Material Dialog service.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'myFlix-Angular-client'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { UserRegistrationFormComponent } from './user-registration-form/user-registration-form.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { MovieCardComponent } from './movie-card/movie-card.component';\n\n/**\n * AppComponent is the root component of the application.\n * It contains methods to open dialogs for user registration, login, and displaying movies.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'myFlix-Angular-client';\n\n  /**\n   * Constructs the AppComponent and injects the MatDialog service for opening dialog boxes.\n   * @param {MatDialog} dialog - The Angular Material Dialog service.\n   */\n  constructor(public dialog: MatDialog) { }\n\n  /**\n   * Opens the user registration dialog when the signup button is clicked.\n   */\n  openUserRegistrationDialog(): void {\n    this.dialog.open(UserRegistrationFormComponent, {\n      // Assigning the dialog a width.\n      width: '280px'\n    });\n  }\n\n  /**\n   * Opens the login dialog.\n   */\n  openLoginDialog(): void {\n    this.dialog.open(LoginFormComponent, {\n      width: '280px'\n    });\n  }\n\n  /**\n   * Opens the dialog to display movies.\n   */\n  openMoviesDialog(): void {\n    this.dialog.open(MovieCardComponent, {\n      width: '500px'\n    });\n  }\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nAppModule -->\n\nInfoDialogComponent->AppModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAppModule -->\n\nLoginFormComponent->AppModule\n\n\n\n\n\nMovieCardComponent\n\nMovieCardComponent\n\nAppModule -->\n\nMovieCardComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nUserRegistrationFormComponent\n\nUserRegistrationFormComponent\n\nAppModule -->\n\nUserRegistrationFormComponent->AppModule\n\n\n\n\n\nWelcomePageComponent\n\nWelcomePageComponent\n\nAppModule -->\n\nWelcomePageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            InfoDialogComponent\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            MovieCardComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            UserProfileComponent\n                        \n                        \n                            UserRegistrationFormComponent\n                        \n                        \n                            WelcomePageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {HttpClientModule} from '@angular/common/http'; // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\n\n/**\n * Defines the primary application routes.\n */\nconst routes: Routes = [\n  { path: 'profile', component: UserProfileComponent }, // Route for user profile view\n  { path: 'login', component: LoginFormComponent },     // Route for user login view\n];\n\n/**\n * The main routing module for the application.\n * This module defines the app's routes and imports the RouterModule to handle them.\n */\n@NgModule({\n  imports: [RouterModule.forRoot(routes)], // Imports the RouterModule and sets the app routes.\n  exports: [RouterModule]                  // Exports RouterModule to make it available throughout the app.\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FetchApiDataService.html":{"url":"injectables/FetchApiDataService.html","title":"injectable - FetchApiDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FetchApiDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/fetch-api-data.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for fetching data from the API.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addToFavorites\n                            \n                            \n                                    Public\n                                deleteUser\n                            \n                            \n                                    Private\n                                extractResponseData\n                            \n                            \n                                    Public\n                                getAllMovies\n                            \n                            \n                                    Public\n                                getFavoriteMovies\n                            \n                            \n                                    Public\n                                getMovieById\n                            \n                            \n                                    Public\n                                getOneDirector\n                            \n                            \n                                    Public\n                                getOneGenre\n                            \n                            \n                                    Public\n                                getOneMovie\n                            \n                            \n                                getOneUser\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Public\n                                removeFromFavorites\n                            \n                            \n                                    Public\n                                updateUser\n                            \n                            \n                                    Public\n                                userLogin\n                            \n                            \n                                    Public\n                                userRegistration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/fetch-api-data.service.ts:16\n                            \n                        \n\n                \n                    \n                            Creates an instance of FetchApiDataService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient used for making API calls.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addToFavorites\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToFavorites(username: string, movieId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:160\n                        \n                    \n\n\n            \n                \n                        Adds a movie to a user's favorites.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Username.\n\n                                            \n                                        \n                                        \n                                                movieId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Movie ID.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:216\n                        \n                    \n\n\n            \n                \n                        Deletes a user.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractResponseData\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractResponseData(res: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:233\n                        \n                    \n\n\n            \n                \n                        Extracts data from API response.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    API response.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Extracted data or an empty object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllMovies\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllMovies()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Fetches all movies.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getFavoriteMovies\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFavoriteMovies()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:141\n                        \n                    \n\n\n            \n                \n                        Fetches a user's favorite movies.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of movie IDs.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getMovieById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMovieById(movieId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Fetches a movie by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                movieId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Movie ID.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getOneDirector\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOneDirector(directorName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:98\n                        \n                    \n\n\n            \n                \n                        Fetches a director by name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                directorName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Director's name.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getOneGenre\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOneGenre(genreName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:114\n                        \n                    \n\n\n            \n                \n                        Fetches a genre by name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                genreName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Genre name.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getOneMovie\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOneMovie(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Fetches a single movie by its title.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Movie title.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOneUser\n                        \n                    \n                \n            \n            \n                \ngetOneUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:126\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:203\n                        \n                    \n\n\n            \n                \n                        Fetches user info by username.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Username.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:244\n                        \n                    \n\n\n            \n                \n                        Handles errors during API calls.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Error object or message.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable throwing the error.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeFromFavorites\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeFromFavorites(username: string, movieId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:173\n                        \n                    \n\n\n            \n                \n                        Removes a movie from a user's favorites.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Username.\n\n                                            \n                                        \n                                        \n                                                movieId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Movie ID.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(updatedUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:186\n                        \n                    \n\n\n            \n                \n                        Updates user details.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    New user details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    userLogin(userDetails: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:38\n                        \n                    \n\n\n            \n                \n                        Logs in a user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userDetails\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User details for login.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userRegistration\n                        \n                    \n                \n            \n            \n                \n                        \n                    userRegistration(userDetails: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Registers a user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userDetails\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User details for registration.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of any.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/** API URL */\nconst apiUrl = 'https://hotpotatoes.onrender.com/';\n\n/**\n * Service responsible for fetching data from the API.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FetchApiDataService {\n\n  /**\n   * Creates an instance of FetchApiDataService.\n   * @param http HttpClient used for making API calls.\n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Registers a user.\n   * @param userDetails User details for registration.\n   * @returns Observable of any.\n   */\n  public userRegistration(userDetails: any): Observable {\n    return this.http.post(apiUrl + 'users', userDetails).pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Logs in a user.\n   * @param userDetails User details for login.\n   * @returns Observable of any.\n   */\n  public userLogin(userDetails: any): Observable {\n    return this.http.post(apiUrl + 'login', userDetails).pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Fetches all movies.\n   * @returns Observable of any.\n   */\n  public getAllMovies(): Observable {\n      const token = localStorage.getItem('token');\n      return this.http.get(apiUrl + 'movies', {\n          headers: new HttpHeaders(\n              {\n                  Authorization: 'Bearer ' + token\n              }\n          )\n      }).pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n    /**\n   * Fetches a single movie by its title.\n   * @param title Movie title.\n   * @returns Observable of any.\n   */\n    public getOneMovie(title: string): Observable {\n      const token = localStorage.getItem('token');\n      return this.http.get(apiUrl + 'movies/' + title, {\n          headers: new HttpHeaders(\n              {\n                  Authorization: 'Bearer ' + token\n              }\n          )\n      }).pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n\n  /**\n   * Fetches a movie by its ID.\n   * @param movieId Movie ID.\n   * @returns Observable of any.\n   */\n  public getMovieById(movieId: string): Observable {\n    const token = localStorage.getItem('token');\n    return this.http.get(`${apiUrl}movies/${movieId}`, {\n      headers: new HttpHeaders({\n        Authorization: `Bearer ${token}`,\n      }),\n    })\n    .pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n  \n\n  /**\n   * Fetches a director by name.\n   * @param directorName Director's name.\n   * @returns Observable of any.\n   */\n  public getOneDirector(directorName: string): Observable {\n      const token = localStorage.getItem('token');\n      return this.http.get(apiUrl + 'movies/director/' + directorName, {\n          headers: new HttpHeaders(\n              {\n                  Authorization: 'Bearer ' + token\n              }\n          )\n      }).pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n   /**\n   * Fetches a genre by name.\n   * @param genreName Genre name.\n   * @returns Observable of any.\n   */\n   public getOneGenre(genreName: string): Observable {\n      const token = localStorage.getItem('token');\n      return this.http.get(apiUrl + 'movies/genre/' + genreName, {\n          headers: new HttpHeaders(\n              {\n                  Authorization: 'Bearer ' + token\n              }\n          )\n      }).pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n  // Making the api call for the get one user endpoint\n  getOneUser(): Observable  {\n      const username = localStorage.getItem('username');\n      const token = localStorage.getItem('token');\n      return this.http.get(apiUrl + 'users/' + username, {\n          headers: new HttpHeaders(\n              {\n                  Authorization: 'Bearer ' + token\n              }\n          )\n      }).pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n /**\n   * Fetches a user's favorite movies.\n   * @returns Observable of movie IDs.\n   */\n public getFavoriteMovies(): Observable {\n    const username = localStorage.getItem('username');\n    const token = localStorage.getItem('token');\n    return this.http.get(apiUrl + 'users/' + username + '/favoriteMovies', {\n      headers: new HttpHeaders({\n        Authorization: 'Bearer ' + token\n      })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Adds a movie to a user's favorites.\n   * @param username Username.\n   * @param movieId Movie ID.\n   * @returns Observable of any.\n   */\n  public addToFavorites(username: string, movieId: string): Observable {\n    const token = localStorage.getItem('token');\n    return this.http.post(`${apiUrl}users/${username}/movies/${movieId}`, {}, {\n      headers: { Authorization: `Bearer ${token}` }\n    });\n  }\n\n /**\n   * Removes a movie from a user's favorites.\n   * @param username Username.\n   * @param movieId Movie ID.\n   * @returns Observable of any.\n   */\n public removeFromFavorites(username: string, movieId: string): Observable {\n    const token = localStorage.getItem('token');\n    return this.http.delete(`${apiUrl}users/${username}/movies/${movieId}`, {\n      headers: { Authorization: `Bearer ${token}` }\n    });\n  }\n\n\n /**\n   * Updates user details.\n   * @param updatedUser New user details.\n   * @returns Observable of any.\n   */\n public updateUser(updatedUser: any): Observable {\n      const username = localStorage.getItem('username');\n      const token = localStorage.getItem('token');\n      return this.http.put(apiUrl + 'users/' + username, updatedUser, {\n          headers: new HttpHeaders(\n              {\n                  Authorization: 'Bearer ' + token\n              }\n          )\n      }).pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n   /**\n   * Fetches user info by username.\n   * @param username Username.\n   * @returns Observable of any.\n   */\n   public getUser(username: string): Observable {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n        'Authorization': 'Bearer ' + token\n    });\n    return this.http.get(apiUrl + 'users/' + username, { headers: headers })\n    .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Deletes a user.\n   * @returns Observable of any.\n   */\n  public deleteUser(): Observable {\n    const username = localStorage.getItem('username'); // This line was missing\n    const token = localStorage.getItem('token');\n    return this.http.delete(apiUrl + 'users/' + username, {\n        headers: new HttpHeaders({\n            Authorization: 'Bearer ' + token\n        })\n    }).pipe(map(this.extractResponseData), catchError(this.handleError));\n}\n\n\n\n/**\n   * Extracts data from API response.\n   * @param res API response.\n   * @returns Extracted data or an empty object.\n   */\nprivate extractResponseData(res: any): any {\n  const body = res;\n  return body || {};\n}\n\n\n/**\n   * Handles errors during API calls.\n   * @param error Error object or message.\n   * @returns Observable throwing the error.\n   */\nprivate handleError(error: any): Observable {\n    let errorMessage = 'Unknown error!';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    window.alert(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalErrorHandler.html":{"url":"injectables/GlobalErrorHandler.html","title":"injectable - GlobalErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GlobalErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/global-error-handler.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/global-error-handler.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/global-error-handler.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ErrorHandler, Injectable, Injector } from '@angular/core';\n\n@Injectable()\nexport class GlobalErrorHandler implements ErrorHandler {\n\n  constructor(private injector: Injector) { }\n\n  handleError(error: any): void {\n    console.error('Unexpected error occurred:', error);\n    \n    // Additional error handling logic...\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogComponent.html":{"url":"components/InfoDialogComponent.html","title":"component - InfoDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/info-dialog/info-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info-dialog\n            \n\n\n\n            \n                styleUrls\n                ./info-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/info-dialog/info-dialog.component.ts:14\n                            \n                        \n\n                \n                    \n                            Constructs the dialog component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data passed to the dialog containing title and content.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onClose\n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/info-dialog/info-dialog.component.ts:28\n                        \n                    \n\n\n            \n                \n                        Method to close the dialog.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/info-dialog/info-dialog.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/info-dialog/info-dialog.component.ts:20\n                        \n                    \n\n            \n                \n                    Data passed to the dialog containing title and content.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/info-dialog/info-dialog.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss']\n})\n/**\n * Component representing an informational dialog.\n */\nexport class InfoDialogComponent {\n  title: string;\n  content: string;\n\n  /**\n   * Constructs the dialog component.\n   * @param data Data passed to the dialog containing title and content.\n   */\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) {\n    this.title = data.title;\n    this.content = data.content;\n  }\n\n  /**\n   * Method to close the dialog.\n   */\n  onClose(): void {\n    // Close the dialog\n  }\n}\n    \n\n    \n        {{ title }}\n\n\n  {{ content }}\n\n\n\n  Close\n\n    \n\n    \n                \n                    ./info-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ title }}  {{ content }}  Close'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-form/login-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-form\n            \n\n\n\n            \n                styleUrls\n                ./login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                    Public\n                                loginData\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loginUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: FetchApiDataService, dialogRef: MatDialogRef, snackBar: MatSnackBar, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login-form/login-form.component.ts:16\n                            \n                        \n\n                \n                    \n                            Constructs the login form component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        FetchApiDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch data from API.\n\n                                                        \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the login dialog.\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Snackbar for displaying messages.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-form/login-form.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Method to handle user login.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-form/login-form.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login-form/login-form.component.ts:27\n                        \n                    \n\n            \n                \n                    Reference to the login dialog.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FetchApiDataService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login-form/login-form.component.ts:26\n                        \n                    \n\n            \n                \n                    Service to fetch data from API.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loginData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { Username: '', Password: '' }\n                    \n                \n                    \n                        \n                                Defined in src/app/login-form/login-form.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login-form/login-form.component.ts:28\n                        \n                    \n\n            \n                \n                    Snackbar for displaying messages.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FetchApiDataService } from '../fetch-api-data.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss']\n})\n/**\n * Component representing a login form.\n */\nexport class LoginFormComponent implements OnInit {\n  public loginData = { Username: '', Password: '' };\n\n  /**\n   * Constructs the login form component.\n   * @param fetchApiData Service to fetch data from API.\n   * @param dialogRef Reference to the login dialog.\n   * @param snackBar Snackbar for displaying messages.\n   * @param router Router service.\n   */\n  constructor(\n    public fetchApiData: FetchApiDataService,\n    public dialogRef: MatDialogRef,\n    public snackBar: MatSnackBar,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void { }\n\n  /**\n   * Method to handle user login.\n   */\n  loginUser(): void {\n    this.fetchApiData.userLogin(this.loginData).subscribe({\n      next: (result) => {\n            this.dialogRef.close();\n            localStorage.setItem('token', result.token); // assuming the response contains the token in a field named 'token'\n            localStorage.setItem('username', this.loginData.Username);\n            this.snackBar.open('Login successful!', 'OK', { duration: 2000 });\n            this.router.navigate(['movies']);\n            \n        },\n        error: (result) => {\n            this.snackBar.open(result.error.message, 'OK', { duration: 2000 }); // assuming the error response has a message field\n        }\n    });\n}\n}\n\n    \n\n    \n        \n    \n      Login\n    \n    \n      \n        \n          \n        \n        \n          \n        \n      \n    \n    \n        Login\n    \n  \n  \n    \n\n    \n                \n                    ./login-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Login                                                                                        Login        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MovieCardComponent.html":{"url":"components/MovieCardComponent.html","title":"component - MovieCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MovieCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/movie-card/movie-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-movie-card\n            \n\n\n\n            \n                styleUrls\n                ./movie-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./movie-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentImageSrc\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                hoveredMovieId\n                            \n                            \n                                likedMovies\n                            \n                            \n                                movies\n                            \n                            \n                                showModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToFavorites\n                            \n                            \n                                closeImageModal\n                            \n                            \n                                fetchMoviesAndFavorites\n                            \n                            \n                                hoverIcon\n                            \n                            \n                                isFavorite\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                            \n                                openImageModal\n                            \n                            \n                                openInfoDialog\n                            \n                            \n                                removeFromFavorites\n                            \n                            \n                                toggleFavorite\n                            \n                            \n                                updateLikedMoviesBasedOnFavorites\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: FetchApiDataService, snackBar: MatSnackBar, router: Router, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/movie-card/movie-card.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        FetchApiDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToFavorites\n                        \n                    \n                \n            \n            \n                \naddToFavorites(movieId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie-card/movie-card.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                movieId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the movie to be added.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeImageModal\n                        \n                    \n                \n            \n            \n                \ncloseImageModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie-card/movie-card.component.ts:181\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchMoviesAndFavorites\n                        \n                    \n                \n            \n            \n                \nfetchMoviesAndFavorites()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie-card/movie-card.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hoverIcon\n                        \n                    \n                \n            \n            \n                \nhoverIcon(movieId: string, isHovered: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie-card/movie-card.component.ts:201\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                movieId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the movie whose icon is being hovered.\n\n\n                                            \n                                        \n                                        \n                                                isHovered\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA boolean indicating if the icon is being hovered or not.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFavorite\n                        \n                    \n                \n            \n            \n                \nisFavorite(movieId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie-card/movie-card.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                movieId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the movie to check.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nTrue if the movie is a favorite, otherwise false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie-card/movie-card.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLogout\n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie-card/movie-card.component.ts:189\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openImageModal\n                        \n                    \n                \n            \n            \n                \nopenImageModal(imageUrl: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie-card/movie-card.component.ts:172\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                imageUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe URL of the image to be displayed.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openInfoDialog\n                        \n                    \n                \n            \n            \n                \nopenInfoDialog(title: string, content: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie-card/movie-card.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe title for the dialog.\n\n\n                                            \n                                        \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe content/body for the dialog.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromFavorites\n                        \n                    \n                \n            \n            \n                \nremoveFromFavorites(movieId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie-card/movie-card.component.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                movieId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the movie to be removed.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFavorite\n                        \n                    \n                \n            \n            \n                \ntoggleFavorite(movie: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie-card/movie-card.component.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                movie\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe movie object to be toggled.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateLikedMoviesBasedOnFavorites\n                        \n                    \n                \n            \n            \n                \nupdateLikedMoviesBasedOnFavorites(favoriteMovieIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie-card/movie-card.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                favoriteMovieIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAn array of favorite movie IDs.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentImageSrc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hoveredMovieId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        likedMovies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FetchApiDataService } from '../fetch-api-data.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\nimport { forkJoin, Observable } from 'rxjs';\n\n/**\n * @name MovieCardComponent\n * @description Component for rendering and managing movie cards.\n */\n@Component({\n  selector: 'app-movie-card',\n  templateUrl: './movie-card.component.html',\n  styleUrls: ['./movie-card.component.scss']\n})\nexport class MovieCardComponent implements OnInit {\n\n  /** @docType property\n   * @name movies\n   * @description Array of movies fetched from the API.\n   */\n  movies: any[] = [];\n\n  /** @docType property\n   * @name likedMovies\n   * @description Object mapping of movie IDs to boolean values indicating if they're liked.\n   */\n  likedMovies: { [key: string]: boolean } = {};\n\n  /** @docType property\n   * @name hoveredMovieId\n   * @description The ID of the currently hovered movie, or null if none.\n   */\n  hoveredMovieId: string | null = null;\n\n  /** @docType property\n   * @name showModal\n   * @description Boolean flag for whether the modal should be displayed.\n   */\n  showModal: boolean = false;\n\n  /** @docType property\n   * @name currentImageSrc\n   * @description The source URL of the current image to be displayed in the modal.\n   */\n  currentImageSrc: string = '';\n  \n  constructor(\n    private fetchApiData: FetchApiDataService,\n    private snackBar: MatSnackBar,\n    private router: Router,\n    public dialog: MatDialog\n  ) {}\n\n  /** @docType method\n   * @name ngOnInit\n   * @description Lifecycle hook to fetch movie and favorites data on component initialization.\n   */\n  ngOnInit(): void {\n    this.fetchMoviesAndFavorites();\n  }\n \n  /** @docType method\n   * @name fetchMoviesAndFavorites\n   * @description Fetch movies and favorite movies, and update the component state accordingly.\n   */\n  fetchMoviesAndFavorites(): void {\n    forkJoin({\n      allMovies: this.fetchApiData.getAllMovies(),\n      favoriteMovies: this.fetchApiData.getFavoriteMovies()\n    }).subscribe(({ allMovies, favoriteMovies }) => {\n      this.movies = allMovies;\n      this.updateLikedMoviesBasedOnFavorites(favoriteMovies);\n    }, (error: any) => {\n      console.error('Error fetching movies or favorites:', error);\n      this.snackBar.open('Error fetching movies or favorites', 'OK', { duration: 2000 });\n    });\n  }\n\n  /** @docType method\n   * @name updateLikedMoviesBasedOnFavorites\n   * @description Update the `likedMovies` object based on the provided favorite movie IDs.\n   * @param favoriteMovieIds - An array of favorite movie IDs.\n   */\n  updateLikedMoviesBasedOnFavorites(favoriteMovieIds: string[]): void {\n    for (const id of favoriteMovieIds) {\n      this.likedMovies[id] = true;\n    }\n  }\n  /** \n   * @name isFavorite\n   * @description Determines if a movie is marked as favorite.\n   * @param movieId - The ID of the movie to check.\n   * @returns {boolean} - True if the movie is a favorite, otherwise false.\n   */\n  isFavorite(movieId: string): boolean {\n    return this.likedMovies[movieId];\n  }\n\n  /** \n   * @name toggleFavorite\n   * @description Toggles a movie's favorite status on or off.\n   * @param movie - The movie object to be toggled.\n   */\n  toggleFavorite(movie: any): void {\n    if (this.isFavorite(movie._id)) {\n      this.removeFromFavorites(movie._id);\n    } else {\n      this.addToFavorites(movie._id);\n    }\n  }\n\n  /** \n   * @name openInfoDialog\n   * @description Opens an information dialog with the provided title and content.\n   * @param title - The title for the dialog.\n   * @param content - The content/body for the dialog.\n   */\n  openInfoDialog(title: string, content: string): void {\n    this.dialog.open(InfoDialogComponent, {\n      data: { title: title, content: content }\n    });\n  }\n\n  /** \n   * @name addToFavorites\n   * @description Adds a movie to the user's list of favorites.\n   * @param movieId - The ID of the movie to be added.\n   */\n  addToFavorites(movieId: string): void {\n    const username = localStorage.getItem('username');\n    if (!username) return;\n    this.fetchApiData.addToFavorites(username, movieId).subscribe({\n      next: () => {\n        this.likedMovies[movieId] = true;\n        this.snackBar.open('Added to favorites!', 'OK', { duration: 2000 });\n      },\n      error: (error) => {\n        this.snackBar.open(error, 'OK', { duration: 2000 });\n      }\n    });\n  }\n\n  /** \n   * @name removeFromFavorites\n   * @description Removes a movie from the user's list of favorites.\n   * @param movieId - The ID of the movie to be removed.\n   */\n  removeFromFavorites(movieId: string): void {\n    const username = localStorage.getItem('username');\n    if (!username) return;\n    this.fetchApiData.removeFromFavorites(username, movieId).subscribe({\n      next: () => {\n        this.likedMovies[movieId] = false;\n        this.snackBar.open('Removed from favorites!', 'OK', { duration: 2000 });\n      },\n      error: (error) => this.snackBar.open(error, 'OK', { duration: 2000 })\n    });\n  }\n\n  /** \n   * @name openImageModal\n   * @description Opens a modal displaying a larger version of the provided image.\n   * @param imageUrl - The URL of the image to be displayed.\n   */\n  openImageModal(imageUrl: string): void {\n    this.currentImageSrc = imageUrl;\n    this.showModal = true;\n  }\n\n  /** \n   * @name closeImageModal\n   * @description Closes the image modal.\n   */\n  closeImageModal(): void {\n    this.showModal = false;\n  }\n\n  /** \n   * @name onLogout\n   * @description Logs the user out by removing authentication tokens and navigating to the login page.\n   */\n  onLogout(): void {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    this.router.navigate(['/login']);\n  }\n\n  /** \n   * @name hoverIcon\n   * @description Handles the hover state for movie icons.\n   * @param movieId - The ID of the movie whose icon is being hovered.\n   * @param isHovered - A boolean indicating if the icon is being hovered or not.\n   */\n  hoverIcon(movieId: string, isHovered: boolean): void {\n    this.hoveredMovieId = isHovered ? movieId : null;\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n        Close\n    \n\n    \n        \n        \n        \n\n        \n        \n            {{movie?.Title}}\n            Genre: {{movie?.Genre?.Name}}\n            Directed by: {{movie?.Director?.Name}}\n        \n        \n            \n                Genre\n            \n            \n                Director\n            \n            \n                Synopsis\n            \n        \n            \n                favorite\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./movie-card.component.scss\n                \n                .movie-container {\n  overflow-x: auto;\n  white-space: nowrap;\n  width: 100vw;\n  scroll-snap-type: x mandatory;\n  background-color: rgb(176, 188, 228); /* Dark gray background */\n  padding: 20px 20px;  /* Space on top & bottom, and now also on the sides */\n  overflow-y: hidden;\n}\n.movie-scroll {\n  display: inline-flex;\n}\n\n\n.movies-horizontal-scroll {\n  display: flex;\n  flex-direction: row; /* Ensure horizontal layout */\n  flex: 0 0 100vw; /* Each movie takes up 100% of the viewport width */\n  box-sizing: border-box; /* Include padding and border in element's total width and height */\n}\n\n\n.movie-card {\n  flex: 0 0 calc(100vw - 40px);  /* Adjusted width to allow for the padding on the container */\n  white-space: normal;\n  display: inline-block;\n  box-sizing: border-box;\n  background-color: rgb(240, 240, 240);\n  box-shadow: 0 -8px 12px rgba(203, 203, 203, 0.2), 0 8px 12px rgba(203, 203, 203, 0.2); /* Shadows on both top and bottom */\n  height: calc(100vh - 100px);\n  margin: 0 10px;  /* Space between cards */\n  border-radius: 10px;\n  scroll-snap-align: start;\n\n  &:hover {\n      box-shadow: 0 6px 16px rgba(0, 0, 0, 0.25);\n  }\n}\n\n\n\n.movie-image {\n  width: 70%;\n  max-height: 65%; /* Decreased a little to accommodate padding */\n  object-fit: cover;\n  display: block;\n  margin: 0 auto;\n  padding-top: 15px; /* Add padding to the top */\n}\n\nmat-card-header {\n  /* Adjust padding or font-sizes if needed */\n  margin-bottom: 10px;\n}\n\nmat-card-actions {\n  /* Adjust padding or font-sizes if needed */\n  button {\n      margin-right: 10px;\n  }\n\n  mat-icon {\n    cursor: pointer;\n    transition: color 0.3s ease;\n\n    &.liked, &:hover, &.hovered {\n        color: #ff9999;\n    }\n}\n}\n\n.mat-tooltip {\n  white-space: pre-line !important;\n}\n\n.image-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n\n.image-modal img {\n  max-width: 90vw;  /* Allow for some margin around image */\n  max-height: 90vh;\n}\n\n.image-modal button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background: white;\n  border: none;\n  padding: 5px 10px;\n  cursor: pointer;\n}\n\n.favorite-icon {\n  color: grey; /* default color */\n}\n\n.is-favorite {\n  color: red; /* color for liked movies */\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Close                                                            {{movie?.Title}}            Genre: {{movie?.Genre?.Name}}            Directed by: {{movie?.Director?.Name}}                                            Genre                                        Director                                        Synopsis                                                favorite                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MovieCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isLoggedIn\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:12\n                            \n                        \n\n                \n                    \n                            Constructs the navigation bar component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onLogout\n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:22\n                        \n                    \n\n\n            \n                \n                        Method to handle user logout.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isLoggedIn\n                    \n                \n\n                \n                    \n                        getisLoggedIn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/navbar/navbar.component.ts:31\n                                \n                            \n                    \n                        \n                                Check if the user is logged in.\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\n/**\n * Component representing a navigation bar.\n */\nexport class NavbarComponent {\n  /**\n   * Constructs the navigation bar component.\n   * @param router Router service.\n   */\n  constructor(private router: Router) { }\n\n  /**\n   * Method to handle user logout.\n   */\n  onLogout(): void {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    this.router.navigate(['/welcome']);  // Or wherever you want to redirect after logout.\n  }\n/**\n   * Check if the user is logged in.\n   * @returns True if logged in, otherwise false.\n   */\nget isLoggedIn(): boolean {\n    return !!localStorage.getItem('token'); // assuming you're using a token for authentication\n  }\n\n}\n\n    \n\n    \n        \n  HotPotatoes my Flix\n  \n  Movies\n  Profile\n  Logout\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                .spacer {\n    flex: 1 1 auto;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  HotPotatoes my Flix    Movies  Profile  Logout'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-profile/user-profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n\n\n            \n                styleUrls\n                ./user-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editMode\n                            \n                            \n                                profileForm\n                            \n                            \n                                userData\n                            \n                            \n                                userFavoriteMovies\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                enableEditMode\n                            \n                            \n                                getFavoriteMovies\n                            \n                            \n                                getUserData\n                            \n                            \n                                goBack\n                            \n                            \n                                    Private\n                                initializeForm\n                            \n                            \n                                isFavorite\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeFavorite\n                            \n                            \n                                saveUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fetchApiData: FetchApiDataService, snackBar: MatSnackBar, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-profile/user-profile.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        FetchApiDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        enableEditMode\n                        \n                    \n                \n            \n            \n                \nenableEditMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-profile/user-profile.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFavoriteMovies\n                        \n                    \n                \n            \n            \n                \ngetFavoriteMovies()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-profile/user-profile.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserData\n                        \n                    \n                \n            \n            \n                \ngetUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-profile/user-profile.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-profile/user-profile.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-profile/user-profile.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFavorite\n                        \n                    \n                \n            \n            \n                \nisFavorite(movieId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-profile/user-profile.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                movieId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the movie to check.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nTrue if the movie is a favorite, otherwise false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-profile/user-profile.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFavorite\n                        \n                    \n                \n            \n            \n                \nremoveFavorite(movieId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-profile/user-profile.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                movieId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the movie to be removed.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUserData\n                        \n                    \n                \n            \n            \n                \nsaveUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-profile/user-profile.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userFavoriteMovies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FetchApiDataService } from '../fetch-api-data.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Location } from '@angular/common';\nimport { forkJoin } from 'rxjs';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n\n  profileForm: FormGroup = new FormGroup({});\n  userData: any;\n  editMode: boolean = false;\n  userFavoriteMovies: any[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private fetchApiData: FetchApiDataService,\n    private snackBar: MatSnackBar,\n    private location: Location\n  ) {}\n\n  /** \n   * @name ngOnInit\n   * @description Lifecycle hook that initializes the form and fetches user data and favorite movies.\n   */\n  ngOnInit(): void {\n    this.initializeForm();\n    this.getUserData();\n    this.getFavoriteMovies();\n  }\n\n  /** \n   * @name initializeForm\n   * @description Initializes the user profile form.\n   */\n  private initializeForm(): void {\n    this.profileForm = this.fb.group({\n      Username: ['', [Validators.required, Validators.minLength(5), Validators.pattern(/^[a-zA-Z0-9]+$/)]],\n      Password: ['', Validators.required],\n      Email: ['', [Validators.required, Validators.email]],\n      Birthday: ['']\n    });\n  }\n\n  /** \n\n   * @name saveUserData\n   * @description Saves the user data if the form is valid.\n   */\n  saveUserData(): void {\n    if (this.profileForm.valid) {\n      this.fetchApiData.updateUser(this.profileForm.value).subscribe({\n        next: (updatedUser) => {\n          this.snackBar.open('Profile updated successfully!', 'OK', { duration: 2000 });\n          localStorage.setItem('username', updatedUser.Username);\n          this.editMode = false; // Exit edit mode after successful update\n        },\n        error: (error) => this.snackBar.open(error, 'OK', { duration: 2000 }),\n      });\n    } else {\n      this.snackBar.open('Please ensure all form fields are valid!', 'OK', { duration: 2000 });\n    }\n  }\n\n  /** \n   * @name getUserData\n   * @description Fetches and sets user data from the API.\n   */\n  getUserData(): void {\n    const username = localStorage.getItem('username');\n    if (username) {\n      this.fetchApiData.getUser(username).subscribe(\n        (userData) => {\n          this.userData = userData;\n          this.profileForm.patchValue(userData); // Populate the form with the fetched data\n        },\n        (error) => {\n          console.error('Error fetching user data:', error);\n          this.snackBar.open('Error fetching user data', 'OK', { duration: 2000 });\n        }\n      );\n    }\n  }\n\n  /** \n   * @name getFavoriteMovies\n   * @description Fetches and sets the list of favorite movies for the user.\n   */\n  getFavoriteMovies(): void {\n    this.fetchApiData.getFavoriteMovies().subscribe(\n      (favoriteMovieIds) => {\n        // Assuming the response is an array of movie IDs\n        this.userFavoriteMovies = favoriteMovieIds;\n      },\n      (error) => {\n        console.error('Error fetching favorite movies:', error);\n        this.snackBar.open('Error fetching favorite movies', 'OK', { duration: 2000 });\n      }\n    );\n  }\n\n  /** \n   * @name isFavorite\n   * @description Checks if a movie is marked as favorite by the user.\n   * @param movieId - The ID of the movie to check.\n   * @returns {boolean} - True if the movie is a favorite, otherwise false.\n   */\n  isFavorite(movieId: string): boolean {\n    return this.userFavoriteMovies.some(movie => movie._id === movieId);\n  }\n\n  /** \n   * @name removeFavorite\n   * @description Removes a movie from the user's list of favorites.\n   * @param movieId - The ID of the movie to be removed.\n   */\n  removeFavorite(movieId: string): void {\n    const username = localStorage.getItem('username');\n    if (username) {\n      this.fetchApiData.removeFromFavorites(username, movieId).subscribe({\n        next: (response) => {\n          // Update local list of favorite movies\n          this.userFavoriteMovies = this.userFavoriteMovies.filter(movie => movie._id !== movieId);\n          this.snackBar.open('Movie removed from favorites!', 'OK', { duration: 2000 });\n        },\n        error: (error) => this.snackBar.open(error, 'OK', { duration: 2000 }),\n      });\n    } else {\n      this.snackBar.open('Username not found!', 'OK', { duration: 2000 });\n    }\n  }\n\n  /** \n   * @name enableEditMode\n   * @description Enables the edit mode for the user profile form.\n   */\n  enableEditMode(): void {\n    this.editMode = true;\n  }\n\n  /** \n   * @name goBack\n   * @description Navigates the user to the previous page.\n   */\n  goBack(): void {\n    this.location.back();\n  }\n}\n\n    \n\n    \n         \n  {{ userData?.Username }}\n  Email: {{ userData?.Email }}\n  Date of Birth: {{ userData?.Birthday | date }}\n\n\nFavorite Movies:\n\n  \n    {{ favoriteMovie?.Title }}\n    Remove\n  \n\nNo favorite movies added yet.\n\n\n  Back\n  Edit Profile\n\n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n    Save Changes\n\n\n  \n  \n    \n\n    \n                \n                    ./user-profile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ userData?.Username }}  Email: {{ userData?.Email }}  Date of Birth: {{ userData?.Birthday | date }}Favorite Movies:      {{ favoriteMovie?.Title }}    Remove  No favorite movies added yet.  Back  Edit Profile                                                      Save Changes    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserRegistrationFormComponent.html":{"url":"components/UserRegistrationFormComponent.html","title":"component - UserRegistrationFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserRegistrationFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-registration-form/user-registration-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-registration-form\n            \n\n\n\n            \n                styleUrls\n                ./user-registration-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-registration-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: FetchApiDataService, dialogRef: MatDialogRef, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        FetchApiDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for making API calls.\n\n\n                                                        \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nReference to the dialog opened.\n\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for showing notifications to the user.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userData\n                    \n                \n                \n                    \n                        Type :     { Username: string; Password: string; Email: string; Birthday: string; }\n\n                    \n                \n                \n                    \n                        Default value : { Username: '', Password: '', Email: '', Birthday: '' }\n                    \n                \n                        \n                            \n                                    Defined in src/app/user-registration-form/user-registration-form.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-registration-form/user-registration-form.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-registration-form/user-registration-form.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:32\n                        \n                    \n\n            \n                \n                    - Reference to the dialog opened.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FetchApiDataService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:31\n                        \n                    \n\n            \n                \n                    - Service for making API calls.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:33\n                        \n                    \n\n            \n                \n                    - Service for showing notifications to the user.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n// You'll use this import to close the dialog on success\nimport { MatDialogRef } from '@angular/material/dialog';\n// This import brings in the API calls we created in 6.2\nimport { FetchApiDataService } from '../fetch-api-data.service';\n// This import is used to display notifications back to the user\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-user-registration-form',\n  templateUrl: './user-registration-form.component.html',\n  styleUrls: ['./user-registration-form.component.scss']\n})\nexport class UserRegistrationFormComponent implements OnInit {\n\n  /** \n   * @name userData\n   * @description Holds the user data for the registration form.\n   */\n  @Input() userData = { Username: '', Password: '', Email: '', Birthday: '' }; \n\n  /** \n   * @name constructor\n   * @description Initializes the UserRegistrationFormComponent with required services and dependencies.\n   * @param fetchApiData - Service for making API calls.\n   * @param dialogRef - Reference to the dialog opened.\n   * @param snackBar - Service for showing notifications to the user.\n   */\n  constructor(\n    public fetchApiData: FetchApiDataService,\n    public dialogRef: MatDialogRef,\n    public snackBar: MatSnackBar) { }\n\n  /** \n   * @name ngOnInit\n   * @description Lifecycle hook that is called after data-bound properties are initialized.\n   */\n  ngOnInit(): void {\n      \n  }\n\n  /** \n   * @name registerUser\n   * @description Sends user registration data to the backend.\n   */\n  registerUser(): void {\n    this.fetchApiData.userRegistration(this.userData).subscribe({\n      next: (result) => {\n        this.dialogRef.close(); // This will close the modal on success!\n        this.snackBar.open(result, 'OK', {\n          duration: 2000\n        });\n      },\n      error: (errorResponse) => {\n        this.snackBar.open(errorResponse.error, 'OK', {\n          duration: 2000\n        });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n      Sign Up!\n    \n    \n      \n        \n          \n          \n          \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n    \n        \n          Sign Up\n        \n    \n  \n    \n\n    \n                \n                    ./user-registration-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Sign Up!                                                                                                                                                          Sign Up              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserRegistrationFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WelcomePageComponent.html":{"url":"components/WelcomePageComponent.html","title":"component - WelcomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WelcomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/welcome-page/welcome-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-welcome-page\n            \n\n\n\n            \n                styleUrls\n                ./welcome-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./welcome-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openUserLoginDialog\n                            \n                            \n                                openUserRegistrationDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/welcome-page/welcome-page.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for opening modal/dialogs.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/welcome-page/welcome-page.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserLoginDialog\n                        \n                    \n                \n            \n            \n                \nopenUserLoginDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/welcome-page/welcome-page.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserRegistrationDialog\n                        \n                    \n                \n            \n            \n                \nopenUserRegistrationDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/welcome-page/welcome-page.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/welcome-page/welcome-page.component.ts:20\n                        \n                    \n\n            \n                \n                    - Service for opening modal/dialogs.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LoginFormComponent } from '../login-form/login-form.component';\nimport { UserRegistrationFormComponent } from '../user-registration-form/user-registration-form.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { fadeInAnimation } from '../animations';\n\n@Component({\n  selector: 'app-welcome-page',\n  templateUrl: './welcome-page.component.html',\n  styleUrls: ['./welcome-page.component.scss'],\n  animations: [fadeInAnimation]\n})\nexport class WelcomePageComponent implements OnInit {\n\n  /** \n   * @name constructor\n   * @description Initializes the WelcomePageComponent with required services and dependencies.\n   * @param dialog - Service for opening modal/dialogs.\n   */\n  constructor(public dialog: MatDialog) { }\n\n  /** \n   * @name ngOnInit\n   * @description Lifecycle hook that is called after data-bound properties are initialized.\n   */\n  ngOnInit(): void {\n  }\n\n  /** \n   * @name openUserRegistrationDialog\n   * @description Opens the user registration dialog.\n   */\n  openUserRegistrationDialog(): void {\n    this.dialog.open(UserRegistrationFormComponent, {\n      width: '280px'\n    });\n  }\n\n  /** \n   * @name openUserLoginDialog\n   * @description Opens the user login dialog.\n   */\n  openUserLoginDialog(): void {\n    this.dialog.open(LoginFormComponent, {\n      width: '280px'\n    });\n  }\n}\n\n    \n\n    \n        \n  \n  \n    Sign Up\n  \n  \n    Login\n  \n\n    \n\n    \n                \n                    ./welcome-page.component.scss\n                \n                body, html {\n  height: 100%;\n  margin: 0;\n}\n\nbody {\n  display: flex;\n  flex-direction: column; /* This will ensure the navbar and main content stack vertically */\n}\n\napp-navbar { /* Assuming your navbar component selector is 'app-navbar' */\n  height: 60px; /* This is an example, adjust if your navbar has a different height */\n}\n\n.main-container {\n  flex-grow: 1; /* This will make the main container occupy all available space except for the navbar's height */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.main-page {\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Sign Up        Login  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WelcomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/animations.ts\n            \n            variable\n            fadeInAnimation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/fetch-api-data.service.ts\n            \n            injectable\n            FetchApiDataService\n            \n                94 %\n                (17/18)\n            \n        \n        \n            \n                \n                src/app/fetch-api-data.service.ts\n            \n            variable\n            apiUrl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/global-error-handler.service.ts\n            \n            injectable\n            GlobalErrorHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/info-dialog/info-dialog.component.ts\n            \n            component\n            InfoDialogComponent\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/movie-card/movie-card.component.ts\n            \n            component\n            MovieCardComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/user-registration-form/user-registration-form.component.ts\n            \n            component\n            UserRegistrationFormComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/welcome-page/welcome-page.component.ts\n            \n            component\n            WelcomePageComponent\n            \n                16 %\n                (1/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.2.10\n        \n            @angular/cdk : ^16.2.9\n        \n            @angular/common : ^16.2.0\n        \n            @angular/compiler : ^16.2.0\n        \n            @angular/core : ^16.2.0\n        \n            @angular/forms : ^16.2.0\n        \n            @angular/material : ^16.2.10\n        \n            @angular/platform-browser : ^16.2.0\n        \n            @angular/platform-browser-dynamic : ^16.2.0\n        \n            @angular/router : ^16.2.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nAppModule -->\n\nInfoDialogComponent->AppModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAppModule -->\n\nLoginFormComponent->AppModule\n\n\n\n\n\nMovieCardComponent\n\nMovieCardComponent\n\nAppModule -->\n\nMovieCardComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nUserRegistrationFormComponent\n\nUserRegistrationFormComponent\n\nAppModule -->\n\nUserRegistrationFormComponent->AppModule\n\n\n\n\n\nWelcomePageComponent\n\nWelcomePageComponent\n\nAppModule -->\n\nWelcomePageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        2 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiUrl   (src/.../fetch-api-data.service.ts)\n                        \n                        \n                            fadeInAnimation   (src/.../animations.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/fetch-api-data.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://hotpotatoes.onrender.com/'\n                    \n                \n\n            \n                \n                    API URL\n\n                \n            \n\n        \n    \n\n    src/app/animations.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fadeInAnimation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('fadeInAnimation', [\n    state('void', style({ opacity: 0 })),\n    transition(':enter', [\n      animate('1s', style({ opacity: 1 })),\n    ]),\n  ])\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
